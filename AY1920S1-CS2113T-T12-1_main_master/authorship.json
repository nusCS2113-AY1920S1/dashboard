[
  {
    "path": "build.gradle",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    compile \u0027com.jfoenix:jfoenix:9.0.8\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "test {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    archiveBaseName \u003d \"Optix\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    archiveVersion \u003d \"1.2\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    mainClassName \u003d \"Main\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "sourceSets {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    main {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        java {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            srcDirs \u003d [\"src/main/java\"]"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        resources {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            srcDirs \u003d [\"src/main/resource\"]"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 31,
      "CheeSengg": 2,
      "-": 27,
      "NicholasLiu97": 2
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        Application.launch(MainApp.class, args);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 7
    }
  },
  {
    "path": "src/main/java/MainApp.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.scene.Parent;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.Optix;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.windows.MainWindow;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class MainApp extends Application {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Optix optix;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void init() throws Exception {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        super.init();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        File currentDir \u003d new File(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        File filePath \u003d new File(currentDir.toString() + \"\\\\src\\\\main\\\\data\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        optix \u003d new Optix(filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void start(Stage primaryStage) throws Exception {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        Parent root \u003d new MainWindow(optix);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        Scene scene \u003d new Scene(root);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        primaryStage.setTitle(\"Optix\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        primaryStage.setScene(scene);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        primaryStage.show();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void stop() throws Exception {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        super.stop();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 38
    }
  },
  {
    "path": "src/main/java/optix/Optix.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.ShowMap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.exceptions.OptixException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.util.Parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": " * Software that stores all the finance for the Opera Hall."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class Optix {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Model model;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Set up the storage, ui, and list of shows."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Save data is loaded from storage.load()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param filePath is the path to the file which contains save data."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public Optix(File filePath) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        model \u003d new Model(storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        parser \u003d new Parser(filePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * initialize Optix object."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * path to the save file is defined in filePath."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param args is empty?"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        File currentDir \u003d new File(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        File filePath \u003d new File(currentDir.toString() + \"\\\\src\\\\main\\\\data\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        new Optix(filePath).run();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * To boot up the software."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        System.out.println(ui.showCommandLine());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                Command c \u003d parser.parse(fullCommand);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                c.execute(model, ui, storage);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            } catch (OptixException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                ui.setMessage(e.getMessage());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                System.out.println(ui.showCommandLine());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Processes user input command."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param fullCommand User input command."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return String for the type of Model that command deals with. E.g Show, Seat and Alias."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String runGui(String fullCommand) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String taskType \u003d \"\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            Command c \u003d parser.parse(fullCommand);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            taskType \u003d c.execute(model, ui, storage);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } catch (OptixException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            ui.setMessage(e.getMessage());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public ShowMap getShows() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return model.getShows();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public ShowMap getShowHistory() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return model.getShowsHistory();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String getResponse() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return ui.getMessage();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 17,
      "CheeSengg": 84
    }
  },
  {
    "path": "src/main/java/optix/commands/ByeCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_BYE \u003d \"Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String execute(Model model, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        storage.write(model.getShows());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ui.setMessage(MESSAGE_BYE);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ui.exitOptix();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return \"bye\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public String[] parseDetails(String details) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        return new String[0];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Exits Optix."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 5,
      "CheeSengg": 25
    }
  },
  {
    "path": "src/main/java/optix/commands/Command.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "package optix.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.exceptions.OptixInvalidCommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    protected boolean quit;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Processes user input to be stored, queried, modified in ShowMap,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * to show response by program in ui and store existing data in Storage."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param model   The data structure holding all the information."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param ui      The User Interface that reads user input and response to user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param storage The filepath of txt file which data are being stored."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public abstract String execute(Model model, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Parses user input into its respective parameters."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param details User input command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return Array of string with respective parameters"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @throws OptixInvalidCommandException The size of String array is not equals to expected"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     *                                      number of parameters for the Command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public abstract String[] parseDetails(String details) throws OptixInvalidCommandException;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 11,
      "CheeSengg": 23
    }
  },
  {
    "path": "src/main/java/optix/commands/HelpCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.exceptions.OptixException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.exceptions.OptixInvalidCommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": " * Prompts user on the correct Command Input format."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String ADD_MENU \u003d \"To add a new show:                            \""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                                           + \"add SHOW_NAME | SEATS_BASE_PRICE | SHOW_DATE1 | SHOW_DATE2 | ...\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static String DELETE_MENU \u003d \"To delete shows with the same name:           \""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                                        + \"delete SHOW_NAME | SHOW_DATE1 | SHOW_DATE2 | ...\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static String VIEW_MENU \u003d \"To view availability of seats for a show:     view SHOW_NAME | SHOW_DATE\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static String SELL_MENU \u003d \"To sell seats to the audience:                \""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                                      + \"sell SHOW_NAME | SHOW_DATE | SEAT1 SEAT2 SEAT3 ...\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static String LIST_MENU \u003d \"To list all shows for viewing:                list\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                                      + \"To list all dates for a specific show:        list SHOW_NAME\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                                      + \"TO list all shows for a specific month:       list MONTH YEAR\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static String POSTPONE_MENU \u003d \"To postpone a show to a later date:           \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                                          + \"postpone SHOW_NAME | OLD_DATE | NEW_DATE\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static String EDIT_MENU \u003d \"To edit show name:                            \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                                      + \"edit OLD_SHOW_NAME | SHOW_DATE | NEW_SHOW_NAME\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static String ALIAS_MENU \u003d \"To add Alias:                                 \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                                        + \"add-alias ALIAS | COMMAND\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                                        + \"To remove Alias:                              \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                                        + \"remove-alias ALIAS | COMMAND\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                                        + \"To reset Alias:                               \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                                        + \"reset-alias\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static String PROFIT_MENU \u003d \"To view profits for a show:                   \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                                        + \"view-profit SHOW_NAME | SHOW_DATE\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                                        + \"To view monthly profits:                      \""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                                        + \"view-monthly MONTH YEAR\\n\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static String MESSAGE_MENU \u003d \"Here are the Commands to use Optix: \\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                                        + \"\\nShow related Commands:\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                                        + ADD_MENU + DELETE_MENU + LIST_MENU + POSTPONE_MENU + EDIT_MENU + PROFIT_MENU"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                                        + \"\\nSeat related Commands:\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                                        + SELL_MENU  + VIEW_MENU"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                                        + \"\\nMiscellaneous Commands:\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                                        + ALIAS_MENU;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public HelpCommand() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        command \u003d \"\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public HelpCommand(String command) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String execute(Model model, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (command.equals(\"\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                ui.setMessage(MESSAGE_MENU);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                ui.setMessage(getSpecificCommand(command));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } catch (OptixException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            ui.setMessage(e.getMessage());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Dummy method."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param details n.a"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @return n.a"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public String[] parseDetails(String details) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        return new String[0];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * String message to prompt user of correct Command input format."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param command The command in query."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return String message for Command input format."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @throws OptixInvalidCommandException if user command input does not exist in Optix."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String getSpecificCommand(String command) throws OptixInvalidCommandException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        StringBuilder message \u003d new StringBuilder(\"Valid \" + command + \" command:\\n\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        switch (command.toLowerCase()) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"add\":"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message.append(ADD_MENU);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message.append(DELETE_MENU);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"view\":"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message.append(VIEW_MENU);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"sell\":"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message.append(SELL_MENU);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message.append(LIST_MENU);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"postpone\":"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message.append(POSTPONE_MENU);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"edit\":"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message.append(EDIT_MENU);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"profit\":"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message.append(PROFIT_MENU);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"alias\":"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message.append(ALIAS_MENU);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            throw new OptixInvalidCommandException();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return message.toString();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 11,
      "CheeSengg": 119
    }
  },
  {
    "path": "src/main/java/optix/commands/finance/ViewMonthlyCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commands.finance;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import optix.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import optix.commons.model.ShowMap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import optix.commons.model.Theatre;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import optix.exceptions.OptixInvalidDateException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.util.OptixDateFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "//@@author NicholasLiu97"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "public class ViewMonthlyCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    private String month;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    private String year;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    private OptixDateFormatter formatter \u003d new OptixDateFormatter();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    private static final String MESSAGE_NO_SHOW_FOUND \u003d \"☹ OOPS!!! There are no shows in %1$s %2$s.\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    private static final String MESSAGE_NOT_YET_CALCULATED \u003d \"☹ OOPS!!! The earnings for %1$s %2$s has not been\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            + \" calculated. Try other months.\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    private static final String MESSAGE_SUCCESSFUL_LIST \u003d \"The earnings for %1$s %2$s is %3$.2f.\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "     * Views the profit for a certain month."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "     * @param splitStr String of format \"MONTH YEAR\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    public ViewMonthlyCommand(String splitStr) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        String[] details \u003d parseDetails(splitStr);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        this.month \u003d details[0].trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        this.year \u003d details[1].trim();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "     * Calculates the earnings for a certain month from the Optix file."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "     * @param shows All shows found in ShowMap."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "     * @param mth The month in numerical form."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "     * @param yr The year."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "     * @return A message String that contains the profit to show to the user."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    private String findFromList(ShowMap shows, int mth, int yr) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        double profit \u003d 0.0;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        ShowMap showsWanted \u003d new ShowMap();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        for (Map.Entry\u003cLocalDate, Theatre\u003e entry : shows.entrySet()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            showsWanted.put(entry.getKey(), entry.getValue());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        showsWanted.entrySet().removeIf(entry -\u003e entry.getKey().getMonthValue() !\u003d mth"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                || entry.getKey().getYear() !\u003d yr);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        if (showsWanted.isEmpty()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            message \u003d String.format(MESSAGE_NO_SHOW_FOUND, month, year);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            for (Map.Entry\u003cLocalDate, Theatre\u003e entry : showsWanted.entrySet()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                profit +\u003d entry.getValue().getProfit();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            message \u003d String.format(MESSAGE_SUCCESSFUL_LIST, month, year, profit);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    public String execute(Model model, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        int mth \u003d formatter.getMonth(month.toLowerCase());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        int yr \u003d formatter.getYear(year);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            if (mth \u003d\u003d 0 || yr \u003d\u003d 0) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                throw new OptixInvalidDateException();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            if (yr \u003c\u003d storage.getToday().getYear()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                if (mth \u003c storage.getToday().getMonthValue()) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                    message \u003d findFromList(model.getShowsHistory(), mth, yr);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                } else if (mth \u003d\u003d storage.getToday().getMonthValue()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                    message \u003d String.format(MESSAGE_NOT_YET_CALCULATED, month, year);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                    message \u003d findFromList(model.getShows(), mth, yr);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                message \u003d findFromList(model.getShows(), mth, yr);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        } catch (OptixInvalidDateException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            message \u003d e.getMessage();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            ui.setMessage(message);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        return \"show\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    public String[] parseDetails(String details) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        return details.trim().split(\" \");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 2,
      "NicholasLiu97": 103
    }
  },
  {
    "path": "src/main/java/optix/commands/finance/ViewProfitCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commands.finance;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import optix.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.ShowMap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.exceptions.OptixInvalidCommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import optix.exceptions.OptixInvalidDateException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import optix.util.OptixDateFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "//@@author NicholasLiu97"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "public class ViewProfitCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    private String details;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    private OptixDateFormatter formatter \u003d new OptixDateFormatter();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    private static final String MESSAGE_SHOW_NOT_FOUND \u003d \"☹ OOPS!!! The show cannot be found.\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    private static final String MESSAGE_DOES_NOT_MATCH \u003d \"☹ OOPS!!! Did you get the wrong date or wrong show. \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            + \"Try again!\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    private static final String MESSAGE_SUCCESSFUL \u003d \"The profit for %1$s on %2$s is %3$.2f\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "     * Views the profit made from a show on a certain date."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "     * @param splitStr String of format \"SHOW_NAME|SHOW_DATE\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    public ViewProfitCommand(String splitStr) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        this.details \u003d splitStr;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    public String execute(Model model, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        String showName;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        String showDate;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            String[] detailsArray \u003d parseDetails(this.details);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            showName \u003d detailsArray[0].trim();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            showDate \u003d detailsArray[1].trim();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        } catch (OptixInvalidCommandException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            ui.setMessage(e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            return \"show\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            if (!formatter.isValidDate(showDate)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                throw new OptixInvalidDateException();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            LocalDate localDate \u003d formatter.toLocalDate(showDate);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            if (localDate.compareTo(storage.getToday()) \u003c\u003d 0) { //in archive list"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                ShowMap showsHistory \u003d model.getShowsHistory();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                if (!showsHistory.containsKey(localDate)) { //date not found"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                    message \u003d MESSAGE_SHOW_NOT_FOUND;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                } else if (!showsHistory.get(localDate).hasSameName(showName)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                    message \u003d MESSAGE_DOES_NOT_MATCH;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                    message \u003d String.format(MESSAGE_SUCCESSFUL, showName, showDate,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                            showsHistory.get(localDate).getProfit());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                ShowMap shows \u003d model.getShows();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                if (!shows.containsKey(localDate)) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                    message \u003d MESSAGE_SHOW_NOT_FOUND;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                } else if (!shows.get(localDate).hasSameName(showName)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                    message \u003d MESSAGE_DOES_NOT_MATCH;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                    message \u003d String.format(MESSAGE_SUCCESSFUL, showName, showDate,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                            shows.get(localDate).getProfit());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        } catch (OptixInvalidDateException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            message \u003d e.getMessage();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            ui.setMessage(message);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        return \"show\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    public String[] parseDetails(String details) throws OptixInvalidCommandException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        String[] detailsArray \u003d  details.trim().split(\"\\\\|\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        if (detailsArray.length !\u003d 2) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            throw new OptixInvalidCommandException();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        return detailsArray;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 1,
      "CheeSengg": 5,
      "NicholasLiu97": 89
    }
  },
  {
    "path": "src/main/java/optix/commands/parser/AddAliasCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "package optix.commands.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.exceptions.OptixException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.exceptions.OptixInvalidCommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.util.Parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "//@@author OungKennedy"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "public class AddAliasCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private String details;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private File preferenceFilePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Command to add a new alias to the command alias map."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param details String containing \"NEW_ALIAS|COMMAND\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public AddAliasCommand(String details, File filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        this.preferenceFilePath \u003d filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Processes user input to be stored, queried, modified in ShowMap,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * to show response by program in ui and store existing data in Storage."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param model   The data structure holding all the information."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param ui      The User Interface that reads user input and response to user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param storage The filepath of txt file which data are being stored."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public String execute(Model model, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // parse the new alias and command from the details"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String newAlias;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            String[] detailsArray \u003d parseDetails(this.details);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            newAlias \u003d detailsArray[0];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            command \u003d detailsArray[1];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        } catch (OptixInvalidCommandException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            ui.setMessage(e.getMessage());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        Parser dummyParser \u003d new Parser(preferenceFilePath);         // create parser object"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            // adds the alias-command pair to commandAliasMap, and saves it to file"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            dummyParser.addAlias(newAlias, command);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            dummyParser.savePreferences();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            message \u003d String.format(\"The new alias %s was successfully paired to the command %s\\n\", newAlias, command);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        } catch (OptixException | IOException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            message \u003d e.getMessage();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        ui.setMessage(message);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public String[] parseDetails(String details) throws OptixInvalidCommandException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String[] detailsArray \u003d details.split(\"\\\\|\",2);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        if (detailsArray.length !\u003d 2) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            throw new OptixInvalidCommandException();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        return detailsArray;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 73
    }
  },
  {
    "path": "src/main/java/optix/commands/parser/ListAliasCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "package optix.commands.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.util.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "//@@author OungKennedy"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "public class ListAliasCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Iterates through all entries in the commandAliasMap of a parser object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Prints every key (alias) and value (command) pair."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * to show response by program in ui and store existing data in Storage."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param model   The data structure holding all the information."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param ui      The User Interface that reads user input and response to user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param storage The filepath of txt file which data are being stored."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public String execute(Model model, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        StringBuilder systemMessage \u003d new StringBuilder(\"Alias list: \\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        for (Map.Entry\u003cString, String\u003e entry : Parser.commandAliasMap.entrySet()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            systemMessage.append(entry.getKey()).append(\" : \").append(entry.getValue()).append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        ui.setMessage(systemMessage.toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        return \"seat\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public String[] parseDetails(String details) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        return new String[0];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 38
    }
  },
  {
    "path": "src/main/java/optix/commands/parser/RemoveAliasCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "package optix.commands.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.exceptions.OptixException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.exceptions.OptixInvalidCommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "//@@author OungKennedy"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "public class RemoveAliasCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private String details;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private HashMap\u003cString, String\u003e commandAliasMap;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Command to remove an existing alias from aliasCommandMap."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param details the details of alias to remove and its command, in an array"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param commandAliasMap the command alias map"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public RemoveAliasCommand(String details, HashMap\u003cString, String\u003e commandAliasMap) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        this.commandAliasMap \u003d commandAliasMap;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Processes user input to be stored, queried, modified in ShowMap,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * to show response by program in ui and store existing data in Storage."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param model   The data structure holding all the information."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param ui      The User Interface that reads user input and response to user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param storage The filepath of txt file which data are being stored."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public String execute(Model model, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // parse the string to assign the details and command strings to local variables"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String alias;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            String[] detailsArray \u003d parseDetails(this.details);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            alias \u003d detailsArray[0];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            command \u003d detailsArray[1];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        } catch (OptixInvalidCommandException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            ui.setMessage(e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            // check if the alias exists"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            if (!commandAliasMap.containsValue(command) || !commandAliasMap.containsKey(alias)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                throw new OptixException(\"Error removing alias.\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            // edit command alias map"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            commandAliasMap.remove(alias, command);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            // open target file"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            File currentDir \u003d new File(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            File filePath \u003d new File(currentDir.toString() + \"\\\\src\\\\main\\\\data\\\\ParserPreferences.txt\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            PrintWriter writer \u003d new PrintWriter(filePath);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            for (Map.Entry\u003cString, String\u003e entry : commandAliasMap.entrySet()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                writer.write(entry.getKey() + \"|\" + entry.getValue() + \u0027\\n\u0027);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            String successMessage \u003d String.format(\"Noted. The alias %s has been removed\\n\", alias);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            ui.setMessage(successMessage);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        } catch (IOException | OptixException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            ui.setMessage(e.getMessage());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public String[] parseDetails(String details) throws OptixInvalidCommandException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String[] detailsArray \u003d details.split(\"\\\\|\",2);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        if (detailsArray.length !\u003d 2) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            throw new OptixInvalidCommandException();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        return detailsArray;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 84,
      "CheeSengg": 1
    }
  },
  {
    "path": "src/main/java/optix/commands/parser/ResetAliasCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "package optix.commands.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.util.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "//@@author OungKennedy"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "public class ResetAliasCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private File preferenceFilePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public ResetAliasCommand(File filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        this.preferenceFilePath \u003d filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Processes user input to be stored, queried, modified in ShowMap,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * to show response by program in ui and store existing data in Storage."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param model   The data structure holding all the information."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param ui      The User Interface that reads user input and response to user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param storage The filepath of txt file which data are being stored."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public String execute(Model model, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // open target file"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        Parser dummyParser \u003d new Parser(this.preferenceFilePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // reset commandAliasMap in Parser class"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        Parser.resetPreferences();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // write the current contents of the commandAliasMap to the saveFile."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String systemMessage;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            dummyParser.savePreferences();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            systemMessage \u003d \"Alias settings have been reset to default.\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            systemMessage \u003d e.getMessage();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        ui.setMessage(systemMessage);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Dummy command."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param details n.a"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @return n.a"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public String[] parseDetails(String details) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        return new String[0];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 58
    }
  },
  {
    "path": "src/main/java/optix/commands/seats/ReassignSeatCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "package optix.commands.seats;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import optix.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.exceptions.OptixException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.exceptions.OptixInvalidCommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import optix.exceptions.OptixInvalidDateException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import optix.util.OptixDateFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "//@@author NicholasLiu97"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "public class ReassignSeatCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    private String details;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    private OptixDateFormatter formatter \u003d new OptixDateFormatter();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    private static final String MESSAGE_SHOW_NOT_FOUND \u003d \"☹ OOPS!!! The show %1$s cannot be found on %2$s.\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    private static final String MESSAGE_DOES_NOT_MATCH \u003d \"☹ OOPS!!! Did you get the wrong date or wrong show. \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            + \"Try again!\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "     * Changes the seat of an existing customer."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "     * @param details String of format \"SHOW_NAME|SHOW_DATE|OLD_SEAT|NEW_SEAT\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    public ReassignSeatCommand(String details) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    public String execute(Model model, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        StringBuilder message \u003d new StringBuilder();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            String[] detailsArray \u003d parseDetails(this.details);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            String showName \u003d detailsArray[0];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            String showDate \u003d detailsArray[1];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            String oldSeat \u003d detailsArray[2];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            String newSeat \u003d detailsArray[3];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            if (!formatter.isValidDate(showDate)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                throw new OptixInvalidDateException();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            LocalDate showLocalDate \u003d formatter.toLocalDate(showDate);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            if (model.containsKey(showLocalDate) \u0026\u0026 model.hasSameName(showLocalDate, showName)) { //found the show"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                message.append(model.reassignSeat(showLocalDate, oldSeat, newSeat));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                storage.write(model.getShows());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            } else if (model.containsKey(showLocalDate)) { //no show on the showDate"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                message.append(String.format(MESSAGE_SHOW_NOT_FOUND, showName, showDate));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            } else { //date does not exist in Optix"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                message.append(MESSAGE_DOES_NOT_MATCH);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        } catch (OptixException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            message.append(e.getMessage());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            ui.setMessage(message.toString());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        return \"seat\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    public String[] parseDetails(String details) throws OptixInvalidCommandException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        String[] detailsArray \u003d details.trim().split(\"\\\\|\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        if (detailsArray.length !\u003d 4) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            throw new OptixInvalidCommandException();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        return detailsArray;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 1,
      "CheeSengg": 1,
      "NicholasLiu97": 72
    }
  },
  {
    "path": "src/main/java/optix/commands/seats/SellSeatCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commands.seats;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.exceptions.OptixException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.exceptions.OptixInvalidCommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.exceptions.OptixInvalidDateException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.util.OptixDateFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "//@@author CheeSengg"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class SellSeatCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String details;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private OptixDateFormatter formatter \u003d new OptixDateFormatter();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_SHOW_NOT_FOUND \u003d \"☹ OOPS!!! The show cannot be found.\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Instantiates the command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * This function is called when the customer has already"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * decided on his seat."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param splitStr String in the format \"SHOW_NAME|SHOW_DATE|DATE_1 DATE_2 etc.\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public SellSeatCommand(String splitStr) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.details \u003d splitStr;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String execute(Model model, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        StringBuilder message \u003d new StringBuilder();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            String[] detailsArray \u003d parseDetails(this.details);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            String showName \u003d detailsArray[0];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            String showDate \u003d detailsArray[1];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            String[] seats \u003d detailsArray[2].split(\" \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (!formatter.isValidDate(showDate)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                throw new OptixInvalidDateException();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            LocalDate showLocalDate \u003d formatter.toLocalDate(showDate);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (model.containsKey(showLocalDate) \u0026\u0026 model.hasSameName(showLocalDate, showName)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                message.append(model.sellSeats(showLocalDate, seats));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                storage.write(model.getShows());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                message \u003d new StringBuilder(MESSAGE_SHOW_NOT_FOUND);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } catch (OptixException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message.append(e.getMessage());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            ui.setMessage(message.toString());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return \"seat\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String[] parseDetails(String details) throws OptixInvalidCommandException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String[] detailsArray \u003d details.trim().split(\"\\\\|\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if (detailsArray.length !\u003d 3) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            throw new OptixInvalidCommandException();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return detailsArray;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 1,
      "CheeSengg": 71
    }
  },
  {
    "path": "src/main/java/optix/commands/seats/ViewSeatsCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commands.seats;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.exceptions.OptixException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.exceptions.OptixInvalidCommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.exceptions.OptixInvalidDateException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.util.OptixDateFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "//@@author CheeSengg"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class ViewSeatsCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String details;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private OptixDateFormatter formatter \u003d new OptixDateFormatter();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_SHOW_FOUND \u003d \"Here is the layout of the theatre for %1$s on %2$s:\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_SHOW_NOT_FOUND \u003d \"☹ OOPS!!! Sorry the show %1$s cannot be found.\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Command to view seats of a show."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param splitStr String of format \"SHOW_NAME|SHOW_DATE\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public ViewSeatsCommand(String splitStr) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.details \u003d splitStr;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String execute(Model model, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        StringBuilder message \u003d new StringBuilder();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            String[] arrayDetails \u003d parseDetails(this.details);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            String showName \u003d arrayDetails[0];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            String showDate \u003d arrayDetails[1];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (!formatter.isValidDate(showDate)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                throw new OptixInvalidDateException();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            LocalDate showLocalDate \u003d formatter.toLocalDate(showDate);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (model.containsKey(showLocalDate) \u0026\u0026 model.hasSameName(showLocalDate, showName)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                message \u003d new StringBuilder(String.format(MESSAGE_SHOW_FOUND, showName, showDate));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                message.append(model.viewSeats(showLocalDate));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                message \u003d new StringBuilder(String.format(MESSAGE_SHOW_NOT_FOUND, showName));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } catch (OptixException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message.append(e.getMessage());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            ui.setMessage(message.toString());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return \"seat\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String[] parseDetails(String details) throws OptixInvalidCommandException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String[] detailsArray \u003d details.trim().split(\"\\\\|\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if (detailsArray.length !\u003d 2) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            throw new OptixInvalidCommandException();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return detailsArray;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 1,
      "CheeSengg": 68
    }
  },
  {
    "path": "src/main/java/optix/commands/shows/AddCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commands.shows;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.exceptions.OptixInvalidCommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.util.OptixDateFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "//@@author CheeSengg"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String details;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private OptixDateFormatter formatter \u003d new OptixDateFormatter();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_SUCCESSFUL \u003d \"Noted. The following shows has been added:\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_ENTRY \u003d \"%1$d. %2$s (on: %3$s)\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_UNSUCCESSFUL \u003d \"☹ OOPS!!! Unable to add the following shows:\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Add a show to the show list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param splitStr String of format \"SHOW_NAME|SEAT_BASE_PRICE|DATE_1|DATE_2|etc\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public AddCommand(String splitStr) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.details \u003d splitStr;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String execute(Model model, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String showName;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String[] showDates;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        double seatBasePrice;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            String[] detailsArray \u003d parseDetails(details);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            showName \u003d detailsArray[0].trim();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            showDates \u003d detailsArray[2].trim().split(\"\\\\|\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            seatBasePrice \u003d Double.parseDouble(detailsArray[1]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            assert seatBasePrice \u003e\u003d 0 : \"Seat Base Price cannot be less than 0\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } catch (OptixInvalidCommandException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            ui.setMessage(e.getMessage());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return \"show\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        LocalDate today \u003d storage.getToday();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ArrayList\u003cString\u003e errorShows \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        StringBuilder message \u003d new StringBuilder(MESSAGE_SUCCESSFUL);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        for (String showDate : showDates) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            String date \u003d showDate.trim();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (!hasValidDate(date)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                errorShows.add(date);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            LocalDate showLocalDate \u003d formatter.toLocalDate(date);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (showLocalDate.compareTo(today) \u003c\u003d 0 || model.containsKey(showLocalDate)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                errorShows.add(date);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                model.addShow(showName, showLocalDate, seatBasePrice);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                message.append(String.format(MESSAGE_ENTRY, counter, showName, date));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if (errorShows.size() \u003d\u003d showDates.length) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message \u003d new StringBuilder(MESSAGE_UNSUCCESSFUL);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } else if (errorShows.size() !\u003d 0) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message.append(\"\\n\" + MESSAGE_UNSUCCESSFUL);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        for (int i \u003d 0; i \u003c errorShows.size(); i++) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message.append(String.format(MESSAGE_ENTRY, i + 1, showName, errorShows.get(i)));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ui.setMessage(message.toString());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        storage.write(model.getShows());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return \"show\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String[] parseDetails(String details) throws OptixInvalidCommandException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String[] detailsArray \u003d details.trim().split(\"\\\\|\", 3);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if (detailsArray.length !\u003d 3) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            throw new OptixInvalidCommandException();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return detailsArray;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private boolean hasValidDate(String date) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return formatter.isValidDate(date);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 1,
      "CheeSengg": 96
    }
  },
  {
    "path": "src/main/java/optix/commands/shows/DeleteCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commands.shows;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.util.OptixDateFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "//@@author OungKennedy"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private String details;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private OptixDateFormatter formatter \u003d new OptixDateFormatter();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private static final String MESSAGE_SUCCESSFUL \u003d \"Noted. The following shows has been deleted:\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private static final String MESSAGE_ENTRY \u003d \"%1$d. %2$s (on: %3$s)\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private static final String MESSAGE_SHOW_NOT_FOUND \u003d \"☹ OOPS!!! Unable to find the following shows:\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Instantiate vars."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param splitStr String of format \"SHOW_NAME|DATE_1|DATE_2|etc.\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public DeleteCommand(String splitStr) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        this.details \u003d splitStr;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public String execute(Model model, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String[] detailsArray \u003d parseDetails(details);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String[] showDates \u003d detailsArray[1].split(\"\\\\|\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String showName \u003d detailsArray[0];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        StringBuilder message \u003d new StringBuilder(MESSAGE_SUCCESSFUL);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        ArrayList\u003cString\u003e missingShows \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        for (String showDate : showDates) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            String date \u003d showDate.trim();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            if (!hasValidDate(date)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                missingShows.add(date);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            LocalDate showLocalDate \u003d formatter.toLocalDate(date);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            if (model.containsKey(showLocalDate) \u0026\u0026 model.hasSameName(showLocalDate, showName)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                model.deleteShow(showLocalDate);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                message.append(String.format(MESSAGE_ENTRY, counter, showName, date));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                missingShows.add(date);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        if (missingShows.size() \u003d\u003d showDates.length) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            message \u003d new StringBuilder(MESSAGE_SHOW_NOT_FOUND);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        } else if (missingShows.size() !\u003d 0) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            message.append(\"\\n\" + MESSAGE_SHOW_NOT_FOUND);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        for (int i \u003d 0; i \u003c missingShows.size(); i++) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            message.append(String.format(MESSAGE_ENTRY, i + 1, showName, missingShows.get(i)));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        ui.setMessage(message.toString());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        storage.write(model.getShows());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        return \"show\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public String[] parseDetails(String details) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        return details.split(\"\\\\|\",2);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private boolean hasValidDate(String date) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        return formatter.isValidDate(date);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 70,
      "CheeSengg": 11
    }
  },
  {
    "path": "src/main/java/optix/commands/shows/EditCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commands.shows;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.exceptions.OptixException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.exceptions.OptixInvalidCommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.exceptions.OptixInvalidDateException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.util.OptixDateFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "//@@author CheeSengg"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class EditCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String details;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_UPDATE_SUCCESSFUL \u003d \"Show has been successfully updated to %1$s.\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_UPDATE_UNSUCCESSFUL \u003d \"☹ OOPS!!! The show you are finding does not exist!\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private OptixDateFormatter formatter \u003d new OptixDateFormatter();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Edit the name of an existing show."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param splitStr String of format \"OLD_SHOW_NAME|SHOW_DATE|NEW_SHOW_NAME\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public EditCommand(String splitStr) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.details \u003d splitStr;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String execute(Model model, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            String[] details \u003d parseDetails(this.details);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            String oldShowName \u003d details[0].trim();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            String showDate \u003d details[1].trim();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            String newShowName \u003d details[2].trim();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (!formatter.isValidDate(showDate)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                throw new OptixInvalidDateException();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            LocalDate localShowDate \u003d formatter.toLocalDate(showDate);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            StringBuilder message \u003d new StringBuilder();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (model.containsKey(localShowDate) \u0026\u0026 model.hasSameName(localShowDate, oldShowName)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                model.editShowName(localShowDate, newShowName);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                storage.write(model.getShows());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                message.append(String.format(MESSAGE_UPDATE_SUCCESSFUL, newShowName));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                message.append(MESSAGE_UPDATE_UNSUCCESSFUL);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            ui.setMessage(message.toString());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } catch (OptixException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            ui.setMessage(e.getMessage());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return \"show\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String[] parseDetails(String details) throws OptixInvalidCommandException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String[] detailsArray \u003d details.split(\"\\\\|\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if (detailsArray.length !\u003d 3) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            throw new OptixInvalidCommandException();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return detailsArray;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 1,
      "CheeSengg": 68
    }
  },
  {
    "path": "src/main/java/optix/commands/shows/ListCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commands.shows;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.ShowMap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "//@@author CheeSengg"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_LIST_FOUND \u003d \"Here are the list of shows:\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_LIST_NOT_FOUND \u003d \"☹ OOPS!!! There are no shows in the near future.\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String execute(Model model, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ShowMap shows \u003d model.getShows();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        StringBuilder message \u003d new StringBuilder();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if (!shows.isEmpty()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message.append(MESSAGE_LIST_FOUND);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message.append(model.listShow());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message \u003d new StringBuilder(MESSAGE_LIST_NOT_FOUND);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ui.setMessage(message.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return \"show\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String[] parseDetails(String details) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return new String[0];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 34
    }
  },
  {
    "path": "src/main/java/optix/commands/shows/ListDateCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commands.shows;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.exceptions.OptixInvalidDateException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.util.OptixDateFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "//@@author CheeSengg"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class ListDateCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private final String monthOfYear;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private OptixDateFormatter formatter \u003d new OptixDateFormatter();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_FOUND_SHOW \u003d \"These shows are showing on %1$s: \\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_NO_SHOWS_FOUND \u003d \"☹ OOPS!!! There are no shows on %1$s.\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public ListDateCommand(String monthOfYear) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.monthOfYear \u003d monthOfYear;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String execute(Model model, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String[] splitStr \u003d monthOfYear.split(\" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        int year \u003d formatter.getYear(splitStr[1]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        int month \u003d formatter.getMonth(splitStr[0].toLowerCase());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        StringBuilder message \u003d new StringBuilder(String.format(MESSAGE_FOUND_SHOW, monthOfYear));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (year \u003d\u003d 0 || month \u003d\u003d 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                throw new OptixInvalidDateException();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            LocalDate startOfMonth \u003d formatter.getStartOfMonth(year, month);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            LocalDate endOfMonth \u003d formatter.getEndOfMonth(year, month);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message.append(model.listShow(startOfMonth, endOfMonth));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (!hasShow(message.toString())) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                message \u003d new StringBuilder(String.format(MESSAGE_NO_SHOWS_FOUND, monthOfYear));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } catch (OptixInvalidDateException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message.append(e.getMessage());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            ui.setMessage(message.toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return \"show\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Dummy Command. Not used"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param details n.a"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return n.a."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String[] parseDetails(String details) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return new String[0];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private boolean hasShow(String message) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return !message.equals(String.format(MESSAGE_FOUND_SHOW, monthOfYear));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 70
    }
  },
  {
    "path": "src/main/java/optix/commands/shows/ListShowCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commands.shows;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "//@@author CheeSengg"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class ListShowCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String showName;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_FOUND_SHOW \u003d \"The show %1$s is showing on the following following dates: \\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_SHOW_NOT_FOUND \u003d \"☹ OOPS!!! The show cannot be found.\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public ListShowCommand(String showName) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.showName \u003d showName;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String execute(Model model, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        StringBuilder message \u003d new StringBuilder(String.format(MESSAGE_FOUND_SHOW, showName));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        message.append(model.listShow(showName));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if (!hasShow(message.toString())) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message \u003d new StringBuilder(MESSAGE_SHOW_NOT_FOUND);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ui.setMessage(message.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return \"show\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String[] parseDetails(String details) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return details.split(\" \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private boolean hasShow(String message) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return !message.equals(String.format(MESSAGE_FOUND_SHOW, showName));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 40
    }
  },
  {
    "path": "src/main/java/optix/commands/shows/PostponeCommand.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commands.shows;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.exceptions.OptixException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.exceptions.OptixInvalidCommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.exceptions.OptixInvalidDateException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.util.OptixDateFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "//@@author CheeSengg"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class PostponeCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String details;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private OptixDateFormatter formatter \u003d new OptixDateFormatter();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_DOES_NOT_MATCH \u003d \"☹ OOPS!!! Did you get the wrong date or wrong show. \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            + \"Try again!\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_SHOW_NOT_FOUND \u003d \"☹ OOPS!!! The show cannot be found.\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_SHOW_CLASH \u003d \"☹ OOPS!!! There already exists a show for %1$s.\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_INVALID_NEW_DATE \u003d \"☹ OOPS!!! It is not possible to postpone to the past.\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_SUCCESSFUL \u003d \"%1$s has been postponed from %2$s to %3$s.\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Command to postpone show."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param splitStr String containing \"SHOW_NAME|OLD_DATE|NEW_DATE\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public PostponeCommand(String splitStr) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.details \u003d splitStr;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String execute(Model model, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        LocalDate today \u003d storage.getToday();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            String[] details \u003d parseDetails(this.details);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            String showName \u003d details[0].trim();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            String oldDate \u003d details[1].trim();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            String newDate \u003d details[2].trim();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (!formatter.isValidDate(oldDate) || !formatter.isValidDate(newDate)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                throw new OptixInvalidDateException();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            LocalDate localOldDate \u003d formatter.toLocalDate(oldDate);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            LocalDate localNewDate \u003d formatter.toLocalDate(newDate);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (localNewDate.compareTo(today) \u003c\u003d 0) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                message \u003d MESSAGE_INVALID_NEW_DATE;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                if (!model.containsKey(localOldDate)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    message \u003d MESSAGE_SHOW_NOT_FOUND;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                } else if (model.containsKey(localNewDate)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    message \u003d String.format(MESSAGE_SHOW_CLASH, newDate);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                } else if (!model.hasSameName(localOldDate, showName)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    message \u003d MESSAGE_DOES_NOT_MATCH;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    model.postponeShow(localOldDate, localNewDate);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    storage.write(model.getShows());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    message \u003d String.format(MESSAGE_SUCCESSFUL, showName, oldDate, newDate);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } catch (OptixException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message \u003d e.getMessage();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            ui.setMessage(message);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return \"show\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String[] parseDetails(String details) throws OptixInvalidCommandException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String[] detailsArray \u003d details.trim().split(\"\\\\|\",3);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if ((detailsArray.length) !\u003d 3) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            throw new OptixInvalidCommandException();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return detailsArray;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 1,
      "CheeSengg": 86
    }
  },
  {
    "path": "src/main/java/optix/commons/Model.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commons;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.ShowMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class Model {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private ShowMap showsHistory \u003d new ShowMap();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private ShowMap shows \u003d new ShowMap();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * The Optix model."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param storage the object which handles data from the save file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public Model(Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        storage.loadShows(shows, showsHistory);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        storage.loadArchive(showsHistory);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        storage.writeArchive(showsHistory);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public ShowMap getShows() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return shows;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public ShowMap getShowsHistory() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return showsHistory;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void setShows(ShowMap shows) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.shows \u003d shows;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void setShowsHistory(ShowMap showsHistory) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.showsHistory \u003d showsHistory;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public boolean hasSameName(LocalDate key, String showName) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return shows.get(key).hasSameName(showName);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public boolean containsKey(LocalDate key) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return shows.containsKey(key);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    //// Commands that deals with Shows"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void addShow(String showName, LocalDate showDate, double seatBasePrice) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        shows.addShow(showName, showDate, seatBasePrice);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void editShowName(LocalDate showDate, String showName) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        shows.editShowName(showDate, showName);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void postponeShow(LocalDate oldDate, LocalDate newDate) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        shows.postponeShow(oldDate, newDate);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String listShow() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return shows.listShow();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String listShow(String showName) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return shows.listShow(showName);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String listShow(LocalDate startOfMonth, LocalDate endOfMonth) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return shows.listShow(startOfMonth, endOfMonth);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void deleteShow(LocalDate showDate) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        shows.deleteShow(showDate);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    //// Commands that deals with Seats."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String viewSeats(LocalDate localDate) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return shows.viewSeats(localDate);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String sellSeats(LocalDate localDate, String... seats) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return shows.sellSeats(localDate, seats);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    public String reassignSeat(LocalDate showlocalDate, String oldSeat, String newSeat) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        return shows.reassignSeat(showlocalDate, oldSeat, newSeat);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 4,
      "CheeSengg": 80,
      "NicholasLiu97": 5
    }
  },
  {
    "path": "src/main/java/optix/commons/Storage.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commons;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.Seat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.ShowMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.Theatre;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private File archiveFilePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private File showMapFilePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private LocalDate today;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Initialise a new storage object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param filePath path to the save file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public Storage(File filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        today \u003d LocalDate.now();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.showMapFilePath \u003d new File(filePath + \"\\\\optix.txt\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.archiveFilePath \u003d new File(filePath + \"\\\\archive.txt\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (!filePath.exists()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                filePath.mkdirs();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (!showMapFilePath.exists()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                showMapFilePath.createNewFile();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (!archiveFilePath.exists()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                archiveFilePath.createNewFile();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            System.out.println(\"Unable to create file.\\n\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Load the data from the save file into model."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void loadShows(ShowMap shows, ShowMap showsHistory) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            FileReader rd \u003d new FileReader(showMapFilePath);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(rd);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            String message;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            while ((message \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                String[] arrStr \u003d message.split(\" \\\\| \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                if (arrStr[0].toLowerCase().equals(\"s\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    LocalDate date \u003d localDate(arrStr[1]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    String showName \u003d arrStr[2].trim();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    double revenue \u003d Double.parseDouble(arrStr[3]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    double seatBasePrice \u003d Double.parseDouble(arrStr[4]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    if (date.compareTo(today) \u003c\u003d 0) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                        showsHistory.addShowHistory(date, showName, revenue);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    Theatre theatre \u003d new Theatre(showName, revenue, seatBasePrice);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    loadSeat(br, theatre);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    shows.put(date, theatre);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            rd.close();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            System.out.println(\"Unable to load file.\\n\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Load the seats from the save file."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param br      buffered reader"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param theatre the theatre to populate"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @return the populated theatre"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @throws IOException when buffered reader has problems with readLine()."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Theatre loadSeat(BufferedReader br, Theatre theatre) throws IOException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        while ((message \u003d br.readLine()) !\u003d null \u0026\u0026 !message.equals(\"next\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            String[] arrStr \u003d message.split(\"\\\\|\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            int row \u003d Integer.parseInt(arrStr[0].trim());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            int col \u003d Integer.parseInt(arrStr[1].trim());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            theatre.setSeat(row, col);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return theatre;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Load information from archive."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param showsHistory Map of shows."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void loadArchive(ShowMap showsHistory) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            FileReader rd \u003d new FileReader(archiveFilePath);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(rd);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            String message;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            while ((message \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                String[] arrStr \u003d message.split(\" \\\\| \");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                LocalDate date \u003d localDate(arrStr[0]);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                String showName \u003d arrStr[1].trim();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                double revenue \u003d Double.parseDouble(arrStr[2]);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                showsHistory.addShowHistory(date, showName, revenue);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            rd.close();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            System.out.println(\"Unable to load file.\\n\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * write to the save file."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Deletes the old file and writes a new file."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param shows ShowMap of shows."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void write(ShowMap shows) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            showMapFilePath.delete();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            showMapFilePath.createNewFile();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            FileWriter wr \u003d new FileWriter(showMapFilePath, true);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            for (Map.Entry\u003cLocalDate, Theatre\u003e entry : shows.entrySet()) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                Theatre theatre \u003d entry.getValue();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                LocalDate date \u003d entry.getKey();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                wr.write(String.format(\"S | %s | %s\", date, theatre.writeToFile()));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                writeSeats(wr, theatre);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            wr.close();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            System.out.println(\"Unable to write to file.\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private void writeSeats(FileWriter wr, Theatre theatre) throws IOException {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        Seat[][] seats \u003d theatre.getSeats();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        for (int i \u003d 0; i \u003c seats.length; i++) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            for (int j \u003d 0; j \u003c seats[i].length; j++) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                if (seats[i][j].isBooked()) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    wr.write(String.format(\"%d | %d\\n\", i, j));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        wr.write(\"next\\n\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Place shows that have passed into an archive."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param showsHistory Map of shows."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void writeArchive(ShowMap showsHistory) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            archiveFilePath.delete();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            archiveFilePath.createNewFile();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            FileWriter wr \u003d new FileWriter(archiveFilePath, true);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            for (Map.Entry\u003cLocalDate, Theatre\u003e entry : showsHistory.entrySet()) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                Theatre theatre \u003d entry.getValue();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                LocalDate date \u003d entry.getKey();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                wr.write(String.format(\"%s | %s | %s\\n\", date, theatre.getShowName(), theatre.getProfit()));"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            wr.close();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            System.out.println(\"Unable to write to file.\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private LocalDate localDate(String date) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return LocalDate.parse(date, formatter);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Get today\u0027s date as LocalDate object."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public LocalDate getToday() {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return today;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 32,
      "CheeSengg": 176
    }
  },
  {
    "path": "src/main/java/optix/commons/model/Seat.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commons.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class Seat {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private double ticketPrice;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String seatTier;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private boolean isBooked;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * the seat object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "     * @param seatTier tier of the seat. Higher tier seat is more precious."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public Seat(String seatTier) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.isBooked \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.seatTier \u003d seatTier;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void setBooked(boolean booked) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        isBooked \u003d booked;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    //store this in case of refund."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void setTicketPrice(double ticketPrice) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.ticketPrice \u003d ticketPrice;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public boolean isBooked() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return isBooked;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        return isBooked ? \"✓\" : \"✘\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String getSeat() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public void setSeatTier(String seatTier) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        this.seatTier \u003d seatTier;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String getSeatTier() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return seatTier;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Get the price of the seat according to its tier."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * The seat tier cannot be out of bounds."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param basePrice base seat price of a show."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @return price seat according to its tier."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public double getSeatPrice(double basePrice) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        assert (Integer.parseInt(seatTier) \u003c\u003d 3 \u0026\u0026 Integer.parseInt(seatTier) \u003e 0);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if (seatTier.equals(\"1\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            ticketPrice \u003d basePrice;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if (seatTier.equals(\"2\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            ticketPrice \u003d basePrice * 1.2;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if (seatTier.equals(\"3\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            ticketPrice \u003d basePrice * 1.5;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return ticketPrice;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 20,
      "CheeSengg": 46,
      "NicholasLiu97": 3
    }
  },
  {
    "path": "src/main/java/optix/commons/model/Show.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commons.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class Show {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String showName;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private double profit;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public Show(String showName, double profit) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.showName \u003d showName;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.profit \u003d profit;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void setShowName(String showName) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.showName \u003d showName;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void setProfit(double profit) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.profit \u003d profit;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String getShowName() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return showName;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public double getProfit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return profit;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    public boolean hasSameName(String checkName) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        return showName.toLowerCase().equals(checkName.toLowerCase());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 27,
      "NicholasLiu97": 4
    }
  },
  {
    "path": "src/main/java/optix/commons/model/ShowMap.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commons.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.util.OptixDateFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": " * TreeMap to sort all usage of the Opera Theatre according to calendar."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class ShowMap extends TreeMap\u003cLocalDate, Theatre\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private OptixDateFormatter formatter \u003d new OptixDateFormatter();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Get show name."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param key the show being queried."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return the name of the show."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String getShowName(Object key) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return this.get(key).getShowName();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    //// Commands that deals with shows"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Add shows into Archive."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param showDate The date of the show."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param showName The name of the show."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param revenue The money earned from the show."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void addShowHistory(LocalDate showDate, String showName, double revenue) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        Show show \u003d new Show(showName, revenue);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        Theatre theatre \u003d new Theatre(show);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.put(showDate, theatre);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void addShow(String showName, LocalDate showDate, double seatBasePrice) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        Theatre theatre \u003d new Theatre(showName, seatBasePrice);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.put(showDate, theatre);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void editShowName(LocalDate showDate, String showName) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.get(showDate).setShowName(showName);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void postponeShow(LocalDate oldDate, LocalDate newDate) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        Theatre theatre \u003d this.deleteShow(oldDate);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.put(newDate, theatre);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Get all the shows that are scheduled and their dates."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return String message of all the shows that are registered."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String listShow() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        StringBuilder message \u003d new StringBuilder();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        for (Map.Entry\u003cLocalDate, Theatre\u003e entry : this.entrySet()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            String date \u003d formatter.toStringDate(entry.getKey());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            String showName \u003d entry.getValue().getShowName();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message.append(String.format(\"%d. %s (on: %s)\\n\", counter, showName, date));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return message.toString();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Get all the dates that are scheduled for the show in query."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param showName the name of the show."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return String message of all the dates for that are scheduled the show in query."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String listShow(String showName) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        StringBuilder message \u003d new StringBuilder();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        for (Map.Entry\u003cLocalDate, Theatre\u003e entry : this.entrySet()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (entry.getValue().hasSameName(showName)) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                String date \u003d formatter.toStringDate(entry.getKey());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                message.append(String.format(\"%d. %s\\n\", counter, date));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return message.toString();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Get all the show name and show date that are scheduled for the month in query."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param startOfMonth First day of the month in query."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param endOfMonth First day of the next month."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return String message of all the shows that are scheduled for the month in query."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String listShow(LocalDate startOfMonth, LocalDate endOfMonth) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        StringBuilder message \u003d new StringBuilder();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        while (startOfMonth.compareTo(endOfMonth) !\u003d 0) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (this.containsKey(startOfMonth)) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                String date \u003d formatter.toStringDate(startOfMonth);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                String showName \u003d this.getShowName(startOfMonth);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                message.append(String.format(\"%d. %s (on: %s)\\n\", counter, showName, date));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            startOfMonth \u003d startOfMonth.plusDays(1);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return message.toString();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Remove a show from the show map."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param key the show to be removed."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return the show that is removed."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public Theatre deleteShow(Object key) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        Theatre show \u003d this.get(key);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.remove(key);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return show;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    //// Command that deals with seats"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String viewSeats(LocalDate localDate) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return this.get(localDate).getSeatingArrangement();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String sellSeats(LocalDate localDate, String... seats) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return this.get(localDate).sellSeats(seats);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    public String reassignSeat(LocalDate showLocalDate, String oldSeat, String newSeat) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        return this.get(showLocalDate).reassignSeat(oldSeat, newSeat);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 141,
      "NicholasLiu97": 5
    }
  },
  {
    "path": "src/main/java/optix/commons/model/Theatre.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commons.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import optix.exceptions.OptixException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.text.DecimalFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class Theatre {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    //@SuppressWarnings(\"checkstyle:membername\")"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String SPACES \u003d \"  \"; // CHECKSTYLE IGNORE THIS LINE"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String STAGE \u003d \"                |STAGE|           \\n\"; // CHECKSTYLE IGNORE THIS LINE"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Seat[][] seats \u003d new Seat[6][10];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private int tierOneSeats;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private int tierTwoSeats;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private int tierThreeSeats;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private double seatBasePrice;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Show show;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * instantiates Theatre Object. Used when loading save file data."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param showName      name of show"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param revenue       expected revenue, calculated from seat purchases - cost"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param seatBasePrice base price of seats"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public Theatre(String showName, double revenue, double seatBasePrice) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        show \u003d new Show(showName, revenue);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.seatBasePrice \u003d seatBasePrice;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        initializeLayout();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Instantiates Theatre Object. Used when there is no revenue yet (fresh instance)."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param showName      name of show"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param seatBasePrice base price of seats."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public Theatre(String showName, double seatBasePrice) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        show \u003d new Show(showName, 0);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.seatBasePrice \u003d seatBasePrice;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        initializeLayout();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public Theatre(Show show) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.show \u003d show;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    // can have multiple layouts to be added for future extensions."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private void initializeLayout() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        tierOneSeats \u003d 0;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        tierTwoSeats \u003d 0;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        tierThreeSeats \u003d 0;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        for (int i \u003d 0; i \u003c seats.length; i++) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            for (int j \u003d 0; j \u003c seats[i].length; j++) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                switch (i) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                case 0:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                case 1:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                    seats[i][j] \u003d new Seat(\"3\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                    tierThreeSeats++;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                case 2:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                case 3:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    seats[i][j] \u003d new Seat(\"2\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    tierTwoSeats++;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                case 4:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                case 5:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                    seats[i][j] \u003d new Seat(\"1\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                    tierOneSeats++;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    assert i \u003e seats.length;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void setShowName(String showName) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        show.setShowName(showName);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String getShowName() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return show.getShowName();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public double getProfit() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return show.getProfit();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public Seat[][] getSeats() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return seats;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String getTierOneSeats() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return Integer.toString(tierOneSeats);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String getTierTwoSeats() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return Integer.toString(tierTwoSeats);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String getTierThreeSeats() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return Integer.toString(tierThreeSeats);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public double getSeatBasePrice() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return seatBasePrice;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * function to set the status of a seat (change it to booked when a seat is bought)."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param row       desired seat row"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param col       desired seat column"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void setSeat(int row, int col) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        seats[row][col].setBooked(true);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        switch (seats[row][col].getSeatTier()) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"1\":"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            tierOneSeats--;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"2\":"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            tierTwoSeats--;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"3\":"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            tierThreeSeats--;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            System.out.println(\"Should have a Seat Tier!\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Get the seating arrangement of the Theatre."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @return seating arrangement as a String."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String getSeatingArrangement() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        StringBuilder seatingArrangement \u003d new StringBuilder(STAGE);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        for (int i \u003d 0; i \u003c seats.length; i++) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            seatingArrangement.append(SPACES);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            for (int j \u003d 0; j \u003c seats[i].length; j++) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                seatingArrangement.append(seats[i][j].getSeat());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            seatingArrangement.append(\"\\n\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        seatingArrangement.append(getSeatsLeft());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return seatingArrangement.toString();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String getSeatsLeft() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return \"\\nTier 1 Seats: \" + tierOneSeats + \"\\n\""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"Tier 2 Seats: \" + tierTwoSeats + \"\\n\""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"Tier 3 Seats: \" + tierThreeSeats + \"\\n\";"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Sell seats to customers."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param seat      desired seat"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @return cost of seat."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public double sellSeats(String seat) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        int row \u003d getRow(seat.substring(0, 1));"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        int col \u003d getCol(seat.substring(1));"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        double costOfSeat \u003d 0;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        //This needs to be changed in the event that the theatre dont have fixed seats for each row"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if (row \u003d\u003d -1 || col \u003d\u003d -1) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return costOfSeat;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        double revenue \u003d show.getProfit();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if (!seats[row][col].isBooked()) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            Seat soldSeat \u003d seats[row][col];"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            soldSeat.setBooked(true);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            costOfSeat \u003d soldSeat.getSeatPrice(seatBasePrice);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            revenue +\u003d costOfSeat;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            switch (soldSeat.getSeatTier()) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"1\":"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                tierOneSeats--;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"2\":"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                tierTwoSeats--;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"3\":"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                tierThreeSeats--;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            seats[row][col] \u003d soldSeat;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        show.setProfit(revenue);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return costOfSeat;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Sell seats to customers. Used when customer wants to buy multiple seats."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param seats     String array of desired seats"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @return Message detailing status of desired seats (sold out or successfully purchased.)"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String sellSeats(String... seats) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        double totalCost \u003d 0;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ArrayList\u003cString\u003e seatsSold \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ArrayList\u003cString\u003e seatsNotSold \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        for (String seatNumber : seats) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            double costOfSeat \u003d sellSeats(seatNumber);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (costOfSeat !\u003d 0) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                totalCost +\u003d costOfSeat;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                seatsSold.add(seatNumber);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                seatsNotSold.add(seatNumber);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if (seatsSold.isEmpty()) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message \u003d String.format(\"☹ OOPS!!! All of the seats %s are unavailable\\n\", seatsNotSold);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } else if (seatsNotSold.isEmpty()) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message \u003d \"You have successfully purchased the following seats: \\n\""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    + seatsSold + \"\\n\""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    + \"The total cost of the ticket is \" + new DecimalFormat(\"$#.00\").format(totalCost) + \"\\n\";"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            message \u003d \"You have successfully purchased the following seats: \\n\""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    + seatsSold + \"\\n\""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    + \"The total cost of the ticket is \" + new DecimalFormat(\"$#.00\").format(totalCost) + \"\\n\""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    + \"The following seats are unavailable: \\n\""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    + seatsNotSold + \"\\n\";"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "     * Reassigns the seat of a customer."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "     * @param oldSeat The seat to be changed."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "     * @param newSeat The seat to change to."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "     * @return Message detailing the success of reassignment and the cost difference between the seats."
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    public String reassignSeat(String oldSeat, String newSeat) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        StringBuilder message \u003d new StringBuilder();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        int oldSeatRow \u003d getRow(oldSeat.substring(0, 1));"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        int oldSeatCol \u003d getCol(oldSeat.substring(1));"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        int newSeatRow \u003d getRow(newSeat.substring(0, 1));"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        int newSeatCol \u003d getCol(newSeat.substring(1));"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        if (oldSeat.equals(newSeat)) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            message.append(String.format(\"Your current seat is already %1$s.\\n\", oldSeat));"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            return message.toString();"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        //if seat number is invalid."
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        if (oldSeatRow \u003d\u003d -1 || oldSeatCol \u003d\u003d -1 || newSeatRow \u003d\u003d -1 || newSeatCol \u003d\u003d -1) {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            message.append(\"☹ OOPS!!! Please enter valid seat numbers.\\n\");"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            return message.toString();"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        if (!seats[oldSeatRow][oldSeatCol].isBooked()) { //if the seat has not been booked yet."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            message.append(String.format(\"The seat %1$s is still available for booking.\\n\", oldSeat));"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            return message.toString();"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        if (seats[newSeatRow][newSeatCol].isBooked()) { // if the new seat has already been booked."
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            message.append(String.format(\"☹ OOPS!!! Seat %1$s is unavailable. Use the View Command to\""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                    + \" view the available seats.\\n\", newSeat));"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            return message.toString();"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        double currRevenue \u003d show.getProfit();"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        double costOfNewSeat \u003d sellSeats(newSeat);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        double costOfOldSeat \u003d removeSeat(oldSeat);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        currRevenue -\u003d costOfOldSeat;"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        currRevenue +\u003d costOfNewSeat;"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        show.setProfit(currRevenue);"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        message.append(String.format(\"Your seat has been successfully changed from %1$s to %2$s.\\n\", oldSeat,"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                newSeat));"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        if (costOfNewSeat \u003e costOfOldSeat) {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            double extraCost \u003d costOfNewSeat - costOfOldSeat;"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            message.append(String.format(\"An extra cost of %1$s is required.\\n\", extraCost));"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        } else if (costOfOldSeat \u003e costOfNewSeat) {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            double returnCost \u003d costOfOldSeat - costOfNewSeat;"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            message.append(String.format(\"%1$s will be returned.\\n\", returnCost));"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        return message.toString();"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "     * Removes a seat booking from the theatre."
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "     * @param seatToRemove The seat to be removed."
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "     * @return The cost of the seat that has been removed."
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    public double removeSeat(String seatToRemove) {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        int row \u003d getRow(seatToRemove.substring(0, 1));"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        int col \u003d getCol(seatToRemove.substring(1));"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        double seatPrice \u003d 0;"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        if (row \u003d\u003d -1 || col \u003d\u003d -1) {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            return seatPrice;"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        } else if (!seats[row][col].isBooked()) {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            seatPrice \u003d -1;"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            return seatPrice;"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        double currRevenue \u003d show.getProfit();"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        seatPrice \u003d seats[row][col].getSeatPrice(seatBasePrice);"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        seats[row][col].setBooked(false);"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        show.setProfit(currRevenue);"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        switch (seats[row][col].getSeatTier()) {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        case \"1\":"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            tierOneSeats++;"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        case \"2\":"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            tierTwoSeats++;"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        case \"3\":"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            tierThreeSeats++;"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        return seatPrice;"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private int getRow(String row) {"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        switch (row) {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"A\":"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"B\":"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"C\":"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 2;"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 3;"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 4;"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"F\":"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 5;"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private int getCol(String col) {"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        switch (col) {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"1\":"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"2\":"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"3\":"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 2;"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"4\":"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 3;"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"5\":"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 4;"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"6\":"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 5;"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"7\":"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 6;"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"8\":"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 7;"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"9\":"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 8;"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"10\":"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 9;"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public boolean hasSameName(String checkName) {"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return show.hasSameName(checkName);"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return String.format(\"%s | %f | %f\\n\", show.getShowName(), show.getProfit(), seatBasePrice);"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 45,
      "CheeSengg": 252,
      "NicholasLiu97": 100
    }
  },
  {
    "path": "src/main/java/optix/exceptions/OptixException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class OptixException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public OptixException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 7
    }
  },
  {
    "path": "src/main/java/optix/exceptions/OptixInvalidCommandException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": " * Thrown when user does not provide the correct input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class OptixInvalidCommandException extends OptixException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public OptixInvalidCommandException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        super(\"☹ OOPS!!! That is an invalid command\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"Please try again. \\n\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 11
    }
  },
  {
    "path": "src/main/java/optix/exceptions/OptixInvalidDateException.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": " * Thrown when the format of the date given is wrong"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": " * or when the date does not exist."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class OptixInvalidDateException extends OptixException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public OptixInvalidDateException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        super(\"☹ OOPS!!! That is an invalid date.\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"Please try again. \\n\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 12
    }
  },
  {
    "path": "src/main/java/optix/ui/Ui.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": " * Reads in the input user and"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": " * returns the response by Optix."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Stores the appropriate response based on users input command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Once user command is processed, Optix\u0027s response is stored using"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * setMessage method to store the appropriate message. Use"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * by showCommandLine method to print out the response."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String SPACES \u003d \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_GREET \u003d \"Hello! I\u0027m Optix\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            + \"What can I do for you?\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.message \u003d MESSAGE_GREET;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Read in the command by user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return String input by user."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Set appropriate response by Optix to be shown based on user\u0027s input."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param message String Optix will respond with based on user input."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void setMessage(String message) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Prints out the Optix\u0027s response based on user\u0027s input."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return Response by Optix."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String showCommandLine() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return SPACES + message + SPACES;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public void exitOptix() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 3,
      "CheeSengg": 62
    }
  },
  {
    "path": "src/main/java/optix/ui/windows/DialogBox.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.ui.windows;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        dialog.setWrapText(true);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Creates a new DialogBox object that contains user input and user image."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param text User input command."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param img User image for the chat box."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return New DialogBox object that contains user input and user image for chat box."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public static DialogBox getOptixDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 59
    }
  },
  {
    "path": "src/main/java/optix/ui/windows/MainWindow.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.ui.windows;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import com.jfoenix.controls.JFXButton;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import com.jfoenix.controls.JFXTextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.animation.PauseTransition;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.Optix;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.ShowMap;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.Theatre;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.util.OptixDateFormatter;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private JFXButton showButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private JFXButton financeButton;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private JFXButton archiveButton;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private JFXButton versionButton;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    //// All the elements on the left side of the window."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private VBox display;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    //// All the elements on the right side of the window."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private VBox chatBox;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private JFXTextField userInput;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private ImageView icon;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Image optixImage \u003d new Image(this.getClass().getResourceAsStream(\"/img/optixImage.png\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/img/userImage.png\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Image optixIcon \u003d new Image(this.getClass().getResourceAsStream(\"/img/optixIcon.png\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Optix optix;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Initialize the main display for Optix."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param optix The software Optix."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public MainWindow(Optix optix) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        FXMLLoader fxmlLoader \u003d new FXMLLoader(getClass().getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.optix \u003d optix;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String greetings \u003d this.optix.getResponse();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        chatBox.getChildren().add(DialogBox.getOptixDialog(greetings, optixImage));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        icon.setImage(optixIcon);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        displayShows();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private void handleResponse() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String fullCommand \u003d userInput.getText();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String taskType \u003d optix.runGui(fullCommand);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String response \u003d optix.getResponse();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        chatBox.getChildren().addAll("
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                DialogBox.getUserDialog(fullCommand, userImage),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                DialogBox.getOptixDialog(response, optixImage)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        );"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            shutDown();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"show\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            displayShows();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"seat\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            displaySeats(fullCommand);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private void shutDown() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        PauseTransition delay \u003d new PauseTransition(new Duration(500));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        delay.setOnFinished(event -\u003e Platform.exit());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        delay.play();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private void displayShows() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        clearDisplay();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        for (Map.Entry\u003cLocalDate, Theatre\u003e entry : optix.getShows().entrySet()) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            display.getChildren().add(ShowController.displayShow(entry.getValue(), entry.getKey()));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private void displayArchive() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        clearDisplay();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        for (Map.Entry\u003cLocalDate, Theatre\u003e entry : optix.getShowHistory().entrySet()) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            display.getChildren().add(ShowController.displayShow(entry.getValue(), entry.getKey()));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private void displaySeats(String fullCommand) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        clearDisplay();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String[] splitStr \u003d fullCommand.split(\"\\\\|\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        LocalDate localDate \u003d new OptixDateFormatter().toLocalDate(splitStr[1].trim());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ShowMap shows \u003d optix.getShows();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        Theatre theatre \u003d shows.get(localDate);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        display.getChildren().add(SeatsDisplayController.displaySeats(theatre, localDate));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private void clearDisplay() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        display.getChildren().removeAll(display.getChildren());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 137
    }
  },
  {
    "path": "src/main/java/optix/ui/windows/SeatController.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.ui.windows;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.scene.shape.Rectangle;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.Seat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class SeatController extends StackPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Seat seat;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private int row;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private int col;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String seatNumber;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Label labelNumber;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Rectangle rectangle;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Circle circle;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private SeatController(int row, int col, Seat seat) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        FXMLLoader fxmlLoader \u003d new FXMLLoader(SeatsDisplayController.class.getResource(\"/view/Seat.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.seat \u003d seat;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        seatNumber \u003d getRow(row) + getCol(col);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        labelNumber.setText(seatNumber);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if (seat.isBooked()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            setBooked();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public static SeatController getSeat(int row, int col, Seat seat) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return new SeatController(row, col, seat);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String getRow(int row) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        switch (row) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case 0:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return \"A\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return \"B\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return \"C\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return \"D\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case 4:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return \"E\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case 5:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return \"F\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return \"error\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String getCol(int col) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return Integer.toString(col + 1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private void setBooked() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        changeColor(Color.web(\"#CB4335\"));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private void changeColor(Color color) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        rectangle.setFill(color);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        circle.setFill(color);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 80
    }
  },
  {
    "path": "src/main/java/optix/ui/windows/SeatsDisplayController.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.ui.windows;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.Seat;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.Theatre;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.util.OptixDateFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class SeatsDisplayController extends VBox {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Theatre theatre;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private LocalDate localDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private final OptixDateFormatter formatter \u003d new OptixDateFormatter();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private HBox rowA;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private HBox rowB;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private HBox rowC;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private HBox rowD;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private HBox rowE;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private HBox rowF;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Label displayDate;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Label displayShowName;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private SeatsDisplayController(Theatre theatre, LocalDate localDate) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.theatre \u003d theatre;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.localDate \u003d localDate;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/SeatsDisplay.fxml\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        displayShowName.setText(theatre.getShowName());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        displayDate.setText(formatter.toStringDate(localDate));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        fillSeats();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public static SeatsDisplayController displaySeats(Theatre theatre, LocalDate localDate) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return new SeatsDisplayController(theatre, localDate);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private void fillSeats() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        Seat[][] seats \u003d theatre.getSeats();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        for (int i \u003d 0; i \u003c seats.length; i++) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            for (int j \u003d 0; j \u003c seats[i].length; j++) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                switch (i) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                case 0:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    rowA.getChildren().add(SeatController.getSeat(i, j, seats[i][j]));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                case 1:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    rowB.getChildren().add(SeatController.getSeat(i, j, seats[i][j]));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                case 2:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    rowC.getChildren().add(SeatController.getSeat(i, j, seats[i][j]));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                case 3:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    rowD.getChildren().add(SeatController.getSeat(i, j, seats[i][j]));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                case 4:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    rowE.getChildren().add(SeatController.getSeat(i, j, seats[i][j]));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                case 5:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    rowF.getChildren().add(SeatController.getSeat(i, j, seats[i][j]));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    System.out.println(\"error\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 88
    }
  },
  {
    "path": "src/main/java/optix/ui/windows/ShowController.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.ui.windows;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.model.Theatre;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.util.OptixDateFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class ShowController extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Theatre theatre;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private final OptixDateFormatter formatter \u003d new OptixDateFormatter();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static final String MESSAGE_SEATS_AVAILABILITY \u003d \"%1$s (Price: $%2$.2f)\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Label displayDate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Label displayShowName;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Label displayTier1Seats;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Label displayTier2Seats;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Label displayTier3Seats;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private ShowController(Theatre theatre, LocalDate date) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.theatre \u003d theatre;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/ShowEntry.fxml\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        displayShowName.setText(theatre.getShowName());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        displayDate.setText(formatter.toStringDate(date));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        displayTier1Seats.setText(seatsAvailability(theatre.getTierOneSeats(), theatre.getSeatBasePrice()));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        displayTier2Seats.setText(seatsAvailability(theatre.getTierTwoSeats(), theatre.getSeatBasePrice() * 1.2));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        displayTier3Seats.setText(seatsAvailability(theatre.getTierThreeSeats(), theatre.getSeatBasePrice() * 1.5));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String seatsAvailability(String seatsLeft, double seatPrice) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return String.format(MESSAGE_SEATS_AVAILABILITY, seatsLeft, seatPrice);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public static ShowController displayShow(Theatre theatre, LocalDate date) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return new ShowController(theatre, date);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 59
    }
  },
  {
    "path": "src/main/java/optix/util/OptixDateFormatter.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": " * Formats input date to YYYY-MM-DD to be sorted in ShowMap."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class OptixDateFormatter {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Get correct String format for DateFormatter."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param date Input date."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return String prefix for DateFormatter."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private String getFormat(String date) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        int padCount \u003d 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        StringBuilder format \u003d new StringBuilder();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String[] timeType \u003d {\"d\", \"M\", \"y\", \"H\", \"H\", \"m\", \"m\"};"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        for (int i \u003d 0; i \u003c date.length(); i +\u003d 1) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            char c \u003d date.charAt(i);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            if (Character.isDigit(c)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                format.append(timeType[padCount]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                if (padCount \u003e\u003d 3) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                    padCount +\u003d 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                format.append(c);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                padCount +\u003d 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return format.toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Format date from String to LocalDate."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param dateString Input date."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return LocalDate for the input date. Format: YYYY-MM-DD"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public LocalDate toLocalDate(String dateString) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(getFormat(dateString));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        //Convert string to localdate"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return LocalDate.parse(dateString, formatter);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Formate date from LocalDate to String."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param localDate YYYY-MM-DD."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return String for the date. Format: DD/MM/YYYY."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public String toStringDate(LocalDate localDate) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String[] splitStr \u003d localDate.toString().split(\"-\", 3);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return String.format(\"%s/%s/%s\", splitStr[2], splitStr[1], splitStr[0]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Checks if date given exists in calendar."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param date String input of the date."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return {@code true} date can be found in the calendar"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * {@code false} otherwise"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public boolean isValidDate(String date) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String[] splitStr \u003d date.split(\"/\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        int yr \u003d Integer.parseInt(splitStr[2]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        int mth \u003d Integer.parseInt(splitStr[1]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        int dy \u003d Integer.parseInt(splitStr[0]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if (mth \u003d\u003d 2) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return (isLeap(yr) \u0026\u0026 dy \u003c\u003d 29) || (!isLeap(yr) \u0026\u0026 dy \u003c\u003d 28);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } else if (mth \u003d\u003d 4 || mth \u003d\u003d 6 || mth \u003d\u003d 9 || mth \u003d\u003d 11) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return dy \u003c\u003d 30;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } else if (mth \u003d\u003d 1 || mth \u003d\u003d 3 || mth \u003d\u003d 5 || mth \u003d\u003d 7 || mth \u003d\u003d 8 || mth \u003d\u003d 10 || mth \u003d\u003d 12) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return dy \u003c\u003d 31;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Check if it is a leap year."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param year to check whether its a leap year"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return {@code true} if it is a leap year"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * {@code false} otherwise"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private boolean isLeap(int year) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return year % 400 \u003d\u003d 0 || (year % 4 \u003d\u003d 0 \u0026\u0026 year % 100 !\u003d 0);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Get year in numeric form."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param year String format: YYYY."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return Integer number for year."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public int getYear(String year) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return Integer.parseInt(year);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Get month in numeric form."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param month String format: MMMM."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return Integer number for month."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public int getMonth(String month) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        switch (month) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"january\":"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"february\":"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 2;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"march\":"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 3;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"april\":"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 4;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"may\":"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 5;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"june\":"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 6;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"july\":"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 7;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"august\":"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 8;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"september\":"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 9;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"october\":"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 10;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"november\":"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 11;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        case \"december\":"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 12;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Get the first day of the month in query."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param year The year in query."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param month The month in query."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return The first day of the month in LocalDate."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public LocalDate getStartOfMonth(int year, int month) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return LocalDate.of(year, month, 1);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Get the first day of the following month for the month in query."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param year The year in query."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param month The month in query."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return The first day of the following month for the month in query in LocalDate."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    public LocalDate getEndOfMonth(int year, int month) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return LocalDate.of(year, month, 1).plusMonths(1);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 7,
      "CheeSengg": 157
    }
  },
  {
    "path": "src/main/java/optix/util/Parser.java",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.HelpCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.commands.parser.AddAliasCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.commands.parser.ListAliasCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.commands.parser.RemoveAliasCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.commands.parser.ResetAliasCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import optix.commands.seats.ReassignSeatCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.seats.SellSeatCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.seats.ViewSeatsCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.AddCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.DeleteCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.EditCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.ListCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.ListDateCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.ListShowCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.PostponeCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.finance.ViewMonthlyCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.finance.ViewProfitCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.exceptions.OptixException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.exceptions.OptixInvalidCommandException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": " * Parse input arguments and create a new Command Object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public static HashMap\u003cString, String\u003e commandAliasMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private File preferenceFilePath; // the directory where the file is stored"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private File preferenceFile; // the path to the file itself"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    // array of all possible command values"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private static String[] commandList \u003d {\"bye\", \"list\", \"help\", \"edit\", \"sell\", \"view\","
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        \"postpone\", \"add\", \"delete\"};"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Set the path to directory containing the save file for preferences."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Set the path to the save file for preferences."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param filePath path to directory containing the save file for preferences."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public Parser(File filePath) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        this.preferenceFile \u003d new File(filePath + \"\\\\ParserPreferences.txt\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        this.preferenceFilePath \u003d filePath;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // load preferences from file"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        if (commandAliasMap.isEmpty()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                loadPreferences();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Parse input argument and create a new Command Object based on the first input word."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param fullCommand The entire input argument."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @return Command Object based on the first input word."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @throws OptixException if the Command word is not recognised by Optix."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public Command parse(String fullCommand) throws OptixException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // add exception for null pointer exception. e.g. postpone"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String[] splitStr \u003d fullCommand.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String aliasName \u003d splitStr[0];"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String commandName \u003d commandAliasMap.getOrDefault(aliasName, aliasName);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        commandName \u003d commandName.toLowerCase().trim(); // is the lower case and trim necessary ?"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if (splitStr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            switch (commandName) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return new ByeCommand();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"help\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return new HelpCommand();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            case \"reset-alias\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                return new ResetAliasCommand(this.preferenceFilePath);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            case \"list-alias\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                return new ListAliasCommand();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                throw new OptixInvalidCommandException();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } else if (splitStr.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            // There will definitely be exceptions thrown here. Need to stress test and then categorise"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            switch (commandName) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"edit\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                return new EditCommand(splitStr[1]);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"sell\":"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                return new SellSeatCommand(splitStr[1]);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"view\":"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                return new ViewSeatsCommand(splitStr[1]);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"postpone\":"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                return new PostponeCommand(splitStr[1]);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return parseList(splitStr[1]);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return new ByeCommand();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            case \"add\": // add poto|5/10/2020|20"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                return new AddCommand(splitStr[1]);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            case \"delete\": // e.g. delete SHOW_NAME DATE_1|DATE_2|etc"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                return new DeleteCommand(splitStr[1]);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            case \"view-profit\": //e.g. view-profit lion king|5/5/2020"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                return new ViewProfitCommand(splitStr[1]);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "            case \"view-monthly\": //e.g. view-monthly May 2020"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                return new ViewMonthlyCommand(splitStr[1]);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            case \"help\":"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return new HelpCommand(splitStr[1].trim());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            case \"add-alias\":"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                return new AddAliasCommand(splitStr[1], this.preferenceFilePath);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            case \"remove-alias\":"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                return new RemoveAliasCommand(splitStr[1], commandAliasMap);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            case \"reassign-seat\":"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                return new ReassignSeatCommand(splitStr[1]);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                throw new OptixInvalidCommandException();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            throw new OptixInvalidCommandException();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    //@@ OungKennedy"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Adds a new alias-command pair to commandAliasMap."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param newAlias new alias to add"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param command  existing command to be paired to"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @throws OptixException thrown when the alias-command pair is invalid (refer to below)"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *                        the alias must not be the name of a command."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *                        the alias must not already be in use. use remove-alias to remove a pair to redirect existing aliases."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *                        the command to be paired to must exist (refer to commandList for list of existing commands)."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *                        the pipe symbol is a special character- it cannot be used."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public void addAlias(String newAlias, String command) throws OptixException {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        if (!newAlias.contains(\"\\\\|\") // pipe symbol not in alias"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                \u0026\u0026 Arrays.asList(commandList).contains(command) // command exists"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                \u0026\u0026 !commandAliasMap.containsKey(newAlias) // new alias is not already in use"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                \u0026\u0026 !Arrays.asList(commandList).contains(newAlias)) { // new alias is not the name of a command"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            commandAliasMap.put(newAlias, command);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            throw new OptixException(\"Alias is already in use, or command does not exist.\\n\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    //@@ OungKennedy"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private void loadPreferences() throws IOException {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        File filePath \u003d this.preferenceFile;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // if file does not exist, create a new file and write the default aliases"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        if (filePath.createNewFile()) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            resetPreferences();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            savePreferences();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        } else { // if file exists then load the preferences within"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            FileReader fr \u003d new FileReader(filePath);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            String aliasPreference;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            while ((aliasPreference \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                if (aliasPreference.length() \u003d\u003d 0) { // handle empty line"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                String[] aliasDetails \u003d aliasPreference.split(\"\\\\|\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                String alias \u003d aliasDetails[0];"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                String command \u003d aliasDetails[1];"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                    this.addAlias(alias, command);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                } catch (OptixException e) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            fr.close();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    //@@ OungKennedy"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Writes the contents of commandAliasMap to the file in preferenceFilePath."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public void savePreferences() throws IOException {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        FileWriter writer \u003d new FileWriter(this.preferenceFile, false);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        for (Map.Entry\u003cString, String\u003e entry : commandAliasMap.entrySet()) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            String saveString \u003d entry.getKey() + \"|\" + entry.getValue() + \u0027\\n\u0027; // no need to escape. why?"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            writer.write(saveString);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    //@@ OungKennedy"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Method to reset preferences to default values.op"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public static void resetPreferences() {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        commandAliasMap.clear();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        commandAliasMap.put(\"b\", \"bye\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        commandAliasMap.put(\"l\", \"list\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        commandAliasMap.put(\"h\", \"help\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        commandAliasMap.put(\"e\", \"edit\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        commandAliasMap.put(\"s\", \"sell\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        commandAliasMap.put(\"v\", \"view\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        commandAliasMap.put(\"p\", \"postpone\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        commandAliasMap.put(\"a\", \"add\");"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        commandAliasMap.put(\"d\", \"delete\");"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": " "
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * Parse the remaining user input to its respective parameters for ListDateCommand or ListShowCommand."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @param details The details to create a new ListDateCommand or ListShowCommand Object."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     * @return new ListDateCommand or ListShowCommand Object."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static Command parseList(String details) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String[] splitStr \u003d details.split(\" \");"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        if (splitStr.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                Integer.parseInt(splitStr[1]);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return new ListDateCommand(details);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                return new ListShowCommand(details);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        return new ListShowCommand(details);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 150,
      "CheeSengg": 87,
      "NicholasLiu97": 9
    }
  },
  {
    "path": "src/main/resource/view/DialogBox.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003cfx:root minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"470.0\" type\u003d\"HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"52.0\" fitWidth\u003d\"48.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003cAnchorPane maxWidth\u003d\"400.0\" prefHeight\u003d\"74.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            \u003cLabel fx:id\u003d\"dialog\" layoutY\u003d\"14.0\" maxWidth\u003d\"350.0\" style\u003d\"-fx-background-radius: 10; -fx-background-color: #AED6F1;\" text\u003d\"Label\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "               \u003cpadding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                  \u003cInsets bottom\u003d\"8.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"8.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "               \u003c/padding\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "               \u003cfont\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                  \u003cFont name\u003d\"Roboto\" size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "               \u003c/font\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 30
    }
  },
  {
    "path": "src/main/resource/view/MainWindow.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003c?import com.jfoenix.controls.JFXButton?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003c?import com.jfoenix.controls.JFXTextField?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003c?import javafx.scene.effect.DropShadow?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003cfx:root depthTest\u003d\"ENABLE\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"640.0\" prefWidth\u003d\"1200.0\" type\u003d\"AnchorPane\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003cAnchorPane maxHeight\u003d\"1.7976931348623157E308\" prefHeight\u003d\"80.0\" prefWidth\u003d\"1200.0\" style\u003d\"-fx-background-color: #C0392B;\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            \u003cJFXButton fx:id\u003d\"showButton\" depthTest\u003d\"ENABLE\" layoutX\u003d\"113.0\" onAction\u003d\"#displayShows\" prefHeight\u003d\"80.0\" prefWidth\u003d\"150.0\" ripplerFill\u003d\"#909497\" style\u003d\"-fx-background-color: #CACFD2;\" text\u003d\"Shows\" textFill\u003d\"#1f1b24\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "               \u003cfont\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                  \u003cFont name\u003d\"Roboto\" size\u003d\"16.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "               \u003c/font\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            \u003c/JFXButton\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            \u003cJFXButton fx:id\u003d\"financeButton\" layoutX\u003d\"263.0\" prefHeight\u003d\"80.0\" prefWidth\u003d\"150.0\" ripplerFill\u003d\"#909497\" style\u003d\"-fx-background-color: #CACFD2;\" text\u003d\"Finance\" textFill\u003d\"#1f1b24\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "               \u003cfont\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                  \u003cFont name\u003d\"Roboto\" size\u003d\"16.0\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "               \u003c/font\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            \u003c/JFXButton\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            \u003cJFXButton fx:id\u003d\"archiveButton\" layoutX\u003d\"413.0\" onAction\u003d\"#displayArchive\" prefHeight\u003d\"80.0\" prefWidth\u003d\"150.0\" ripplerFill\u003d\"#909497\" style\u003d\"-fx-background-color: #CACFD2;\" text\u003d\"Archive\" textFill\u003d\"#1f1b24\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "               \u003cfont\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                  \u003cFont name\u003d\"Roboto\" size\u003d\"16.0\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "               \u003c/font\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            \u003c/JFXButton\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            \u003cJFXButton fx:id\u003d\"versionButton\" layoutX\u003d\"563.0\" prefHeight\u003d\"80.0\" prefWidth\u003d\"150.0\" ripplerFill\u003d\"#909497\" style\u003d\"-fx-background-color: #CACFD2;\" text\u003d\"Version\" textFill\u003d\"#1f1b24\"\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "               \u003cfont\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                  \u003cFont name\u003d\"Roboto\" size\u003d\"16.0\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "               \u003c/font\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            \u003c/JFXButton\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            \u003cLabel layoutX\u003d\"725.0\" layoutY\u003d\"13.0\" prefHeight\u003d\"59.0\" prefWidth\u003d\"202.0\" text\u003d\"CHAT BOT\"\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "               \u003cfont\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                  \u003cFont name\u003d\"Roboto\" size\u003d\"20.0\" /\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "               \u003c/font\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            \u003cImageView fx:id\u003d\"icon\" fitHeight\u003d\"68.0\" fitWidth\u003d\"84.0\" layoutX\u003d\"14.0\" layoutY\u003d\"6.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "         \u003ceffect\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            \u003cDropShadow /\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "         \u003c/effect\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003cScrollPane layoutY\u003d\"80.0\" prefHeight\u003d\"560.0\" prefWidth\u003d\"712.0\"\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            \u003cAnchorPane prefHeight\u003d\"555.0\" prefWidth\u003d\"694.0\"\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                  \u003cVBox fx:id\u003d\"display\" layoutX\u003d\"65.0\" layoutY\u003d\"31.0\" prefHeight\u003d\"480.0\" prefWidth\u003d\"580.0\"\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                     \u003cpadding\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                        \u003cInsets bottom\u003d\"30.0\" /\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                     \u003c/padding\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                     \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                        \u003cInsets /\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                     \u003c/opaqueInsets\u003e\u003c/VBox\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003cJFXTextField fx:id\u003d\"userInput\" layoutX\u003d\"713.0\" layoutY\u003d\"612.0\" onAction\u003d\"#handleResponse\" prefHeight\u003d\"26.0\" prefWidth\u003d\"428.0\" promptText\u003d\"Enter Command Here\"\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            \u003cInsets left\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "         \u003c/padding\u003e\u003c/JFXTextField\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003cScrollPane layoutX\u003d\"712.0\" layoutY\u003d\"80.0\" prefWidth\u003d\"487.0\" vvalue\u003d\"0.89\"\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            \u003cVBox fx:id\u003d\"chatBox\" prefHeight\u003d\"528.0\" prefWidth\u003d\"470.0\" /\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "         \u003c/content\u003e\u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003cJFXButton buttonType\u003d\"RAISED\" layoutX\u003d\"1148.0\" layoutY\u003d\"613.0\" onMouseClicked\u003d\"#handleResponse\" prefHeight\u003d\"26.0\" prefWidth\u003d\"52.0\" style\u003d\"-fx-background-color: #CACFD2;\" text\u003d\"Enter\" /\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 68,
      "-": 6
    }
  },
  {
    "path": "src/main/resource/view/Seat.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003c?import javafx.scene.shape.Circle?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003c?import javafx.scene.shape.Rectangle?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003cfx:root maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"50.0\" prefWidth\u003d\"50.0\" type\u003d\"StackPane\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003cCircle fx:id\u003d\"circle\" fill\u003d\"#5dade2\" radius\u003d\"13.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" translateY\u003d\"-10.0\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003cRectangle fx:id\u003d\"rectangle\" arcHeight\u003d\"5.0\" arcWidth\u003d\"5.0\" fill\u003d\"#5dade2\" height\u003d\"30.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" translateY\u003d\"4.0\" width\u003d\"40.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003cLabel fx:id\u003d\"labelNumber\" text\u003d\"Label\" translateY\u003d\"4.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 14
    }
  },
  {
    "path": "src/main/resource/view/SeatsDisplay.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003c?import com.jfoenix.controls.JFXButton?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003c?import javafx.scene.layout.StackPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003c?import javafx.scene.shape.Rectangle?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003cfx:root maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"480.0\" prefWidth\u003d\"580.0\" type\u003d\"VBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003cAnchorPane prefHeight\u003d\"62.0\" prefWidth\u003d\"580.0\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            \u003cLabel fx:id\u003d\"displayShowName\" layoutX\u003d\"21.0\" layoutY\u003d\"7.0\" prefHeight\u003d\"50.0\" prefWidth\u003d\"361.0\" text\u003d\"Label\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "               \u003cfont\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                  \u003cFont name\u003d\"Monospaced Regular\" size\u003d\"18.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "               \u003c/font\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            \u003cLabel fx:id\u003d\"displayDate\" layoutX\u003d\"414.0\" layoutY\u003d\"7.0\" prefHeight\u003d\"50.0\" prefWidth\u003d\"151.0\" text\u003d\"Label\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "               \u003cfont\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                  \u003cFont name\u003d\"YouYuan\" size\u003d\"16.0\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "               \u003c/font\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003cAnchorPane prefHeight\u003d\"24.0\" prefWidth\u003d\"580.0\"\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            \u003cStackPane layoutX\u003d\"190.0\" layoutY\u003d\"6.0\" prefHeight\u003d\"42.0\" prefWidth\u003d\"200.0\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                  \u003cRectangle arcHeight\u003d\"5.0\" arcWidth\u003d\"5.0\" fill\u003d\"#5dade2\" height\u003d\"37.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" width\u003d\"104.0\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                  \u003cLabel text\u003d\"STAGE\" /\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            \u003c/StackPane\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003cAnchorPane layoutX\u003d\"10.0\" layoutY\u003d\"96.0\" prefHeight\u003d\"33.0\" prefWidth\u003d\"580.0\" /\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003cHBox fx:id\u003d\"rowA\" prefHeight\u003d\"50.0\" prefWidth\u003d\"580.0\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            \u003cInsets left\u003d\"40.0\" /\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003c/HBox\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003cHBox fx:id\u003d\"rowB\" prefHeight\u003d\"50.0\" prefWidth\u003d\"580.0\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            \u003cInsets left\u003d\"40.0\" /\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003c/HBox\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003cHBox fx:id\u003d\"rowC\" layoutX\u003d\"10.0\" layoutY\u003d\"232.0\" prefHeight\u003d\"50.0\" prefWidth\u003d\"580.0\"\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            \u003cInsets left\u003d\"40.0\" /\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003c/HBox\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003cHBox fx:id\u003d\"rowD\" layoutX\u003d\"10.0\" layoutY\u003d\"332.0\" prefHeight\u003d\"50.0\" prefWidth\u003d\"580.0\"\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            \u003cInsets left\u003d\"40.0\" /\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003c/HBox\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003cHBox fx:id\u003d\"rowE\" layoutX\u003d\"10.0\" layoutY\u003d\"397.0\" prefHeight\u003d\"50.0\" prefWidth\u003d\"580.0\"\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            \u003cInsets left\u003d\"40.0\" /\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003c/HBox\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003cHBox fx:id\u003d\"rowF\" layoutX\u003d\"10.0\" layoutY\u003d\"411.0\" prefHeight\u003d\"50.0\" prefWidth\u003d\"580.0\"\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            \u003cInsets left\u003d\"40.0\" /\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003c/HBox\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003cAnchorPane layoutX\u003d\"10.0\" layoutY\u003d\"123.0\" prefHeight\u003d\"33.0\" prefWidth\u003d\"580.0\"\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            \u003cJFXButton buttonType\u003d\"RAISED\" layoutX\u003d\"514.0\" layoutY\u003d\"1.0\" text\u003d\"Confirm\" /\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 77
    }
  },
  {
    "path": "src/main/resource/view/ShowEntry.fxml",
    "fileType": "functional",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003cfx:root maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"80.0\" prefWidth\u003d\"583.0\" style\u003d\"-fx-border-color: WHITE; -fx-background-color: #CACFD2; -fx-background-radius: 20; -fx-border-radius: 20;\" type\u003d\"AnchorPane\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003cLabel fx:id\u003d\"displayShowName\" layoutX\u003d\"25.0\" layoutY\u003d\"10.0\" prefHeight\u003d\"29.0\" prefWidth\u003d\"318.0\" text\u003d\"Label\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            \u003cFont name\u003d\"Monospaced Regular\" size\u003d\"18.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003c/Label\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003cLabel fx:id\u003d\"displayDate\" layoutX\u003d\"25.0\" layoutY\u003d\"47.0\" prefHeight\u003d\"18.0\" prefWidth\u003d\"127.0\" text\u003d\"Label\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "            \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003c/Label\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003cLabel layoutX\u003d\"388.0\" layoutY\u003d\"8.0\" prefHeight\u003d\"18.0\" prefWidth\u003d\"52.0\" text\u003d\"Tier 1:\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003cLabel layoutX\u003d\"388.0\" layoutY\u003d\"29.0\" prefHeight\u003d\"18.0\" prefWidth\u003d\"52.0\" text\u003d\"Tier 2:\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003cLabel layoutX\u003d\"388.0\" layoutY\u003d\"52.0\" prefHeight\u003d\"18.0\" prefWidth\u003d\"52.0\" text\u003d\"Tier 3:\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003cLabel fx:id\u003d\"displayTier1Seats\" layoutX\u003d\"426.0\" layoutY\u003d\"8.0\" prefHeight\u003d\"18.0\" prefWidth\u003d\"149.0\" text\u003d\"Label\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003cLabel fx:id\u003d\"displayTier2Seats\" layoutX\u003d\"426.0\" layoutY\u003d\"29.0\" prefHeight\u003d\"18.0\" prefWidth\u003d\"150.0\" text\u003d\"Label\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "      \u003cLabel fx:id\u003d\"displayTier3Seats\" layoutX\u003d\"426.0\" layoutY\u003d\"52.0\" prefHeight\u003d\"18.0\" prefWidth\u003d\"150.0\" text\u003d\"Label\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "CheeSengg": 26
    }
  },
  {
    "path": "src/test/java/Optix/commands/ByeCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "package optix.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import org.junit.jupiter.api.AfterAll;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "class ByeCommandTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static File currentDir \u003d new File(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static File filePath \u003d new File(currentDir.toString() + \"\\\\src\\\\test\\\\data\\\\testOptix\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Model model \u003d new Model(storage);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        ByeCommand testCommand \u003d new ByeCommand();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand.execute(model, ui, storage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String expected \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"Bye. Hope to see you again soon!\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected, ui.showCommandLine());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @AfterAll"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    static void cleanUp() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        File deletedFile \u003d new File(filePath, \"optix.txt\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        deletedFile.delete();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 20,
      "CheeSengg": 16
    }
  },
  {
    "path": "src/test/java/Optix/commands/finance/ViewMonthlyCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commands.finance;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import optix.commands.seats.SellSeatCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import optix.commands.shows.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import org.junit.jupiter.api.AfterAll;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "class ViewMonthlyCommandTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static File currentDir \u003d new File(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static File filePath \u003d new File(currentDir.toString() + \"\\\\src\\\\test\\\\data\\\\testOptix\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    private Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    private Model model \u003d new Model(storage);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        AddCommand addDummyShow \u003d new AddCommand(\"dummy show name|20|5/5/2020\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        addDummyShow.execute(model, ui, storage);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        SellSeatCommand sellDummySeat \u003d new SellSeatCommand(\"dummy show name|5/5/2020|A1 A2 A3\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        sellDummySeat.execute(model, ui, storage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        AddCommand addDummyShow2 \u003d new AddCommand(\"dummy show name2|20|20/5/2020\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        addDummyShow2.execute(model, ui, storage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        SellSeatCommand sellDummySeat2 \u003d new SellSeatCommand(\"dummy show name2|20/5/2020|A1 A2 A3 A4 A5\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        sellDummySeat2.execute(model, ui, storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        AddCommand addDummyShow3 \u003d new AddCommand(\"dummy show name3|20|1/1/2030\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        addDummyShow3.execute(model, ui, storage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        SellSeatCommand sellDummySeat3 \u003d new SellSeatCommand(\"dummy show name3|1/1/2030|A1 A2 A3 B2\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        sellDummySeat3.execute(model, ui, storage);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        ViewMonthlyCommand testCommand \u003d new ViewMonthlyCommand(\"May 2020\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        testCommand.execute(model, ui, storage);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        String expected \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"The earnings for May 2020 is 240.00.\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        assertEquals(expected, ui.showCommandLine());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        ViewMonthlyCommand testCommand2 \u003d new ViewMonthlyCommand(\"January 2023\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        testCommand2.execute(model, ui, storage);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        String expected2 \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                + \"☹ OOPS!!! There are no shows in January 2023.\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        assertEquals(expected2, ui.showCommandLine());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        filePath.deleteOnExit();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @AfterAll"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    static void cleanUp() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        File deletedFile \u003d new File(filePath, \"optix.txt\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        deletedFile.delete();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 8,
      "CheeSengg": 11,
      "NicholasLiu97": 49
    }
  },
  {
    "path": "src/test/java/Optix/commands/finance/ViewProfitCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commands.finance;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import optix.commands.seats.SellSeatCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import optix.commands.shows.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import org.junit.jupiter.api.AfterAll;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "class ViewProfitCommandTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static File currentDir \u003d new File(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static File filePath \u003d new File(currentDir.toString() + \"\\\\src\\\\test\\\\data\\\\testOptix\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    private Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    private Model model \u003d new Model(storage);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        AddCommand addDummyShow \u003d new AddCommand(\"dummy show name|20|10/5/2020\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        addDummyShow.execute(model, ui, storage);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        SellSeatCommand sellDummySeat \u003d new SellSeatCommand(\"dummy show name|10/5/2020|A1 A2 A3\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        sellDummySeat.execute(model, ui, storage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        ViewProfitCommand testCommand \u003d new ViewProfitCommand(\"dummy show name|10/5/2020\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        testCommand.execute(model, ui, storage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        String expected \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                + \"The profit for dummy show name on 10/5/2020 is 90.00\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        assertEquals(expected, ui.showCommandLine());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        ViewProfitCommand testCommand2 \u003d new ViewProfitCommand(\"dummy show name|6/5/2020\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        testCommand2.execute(model, ui, storage);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        String expected2 \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                + \"☹ OOPS!!! The show cannot be found.\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        assertEquals(expected2, ui.showCommandLine());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        ViewProfitCommand testCommand3 \u003d new ViewProfitCommand(\"wrong show name|10/5/2020\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        testCommand3.execute(model, ui, storage);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        String expected3 \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                + \"☹ OOPS!!! Did you get the wrong date or wrong show. \\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                + \"Try again!\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        assertEquals(expected3, ui.showCommandLine());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "        filePath.deleteOnExit();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @AfterAll"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    static void cleanUp() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        File deletedFile \u003d new File(filePath, \"optix.txt\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        deletedFile.delete();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 5,
      "CheeSengg": 10,
      "NicholasLiu97": 51
    }
  },
  {
    "path": "src/test/java/Optix/commands/seats/SellSeatCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commands.seats;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.commands.seats.SellSeatCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import org.junit.jupiter.api.AfterAll;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "class SellSeatCommandTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static File currentDir \u003d new File(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static File filePath \u003d new File(currentDir.toString() + \"\\\\src\\\\test\\\\data\\\\testOptix\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Model model \u003d new Model(storage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        filePath.deleteOnExit();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        AddCommand addTestShow1 \u003d new AddCommand(\"Test Show 1|20|5/5/2020\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        addTestShow1.execute(model, ui, storage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // sell an available seat"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        SellSeatCommand testCommand1 \u003d new SellSeatCommand(\"Test Show 1|5/5/2020|A1\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand1.execute(model, ui, storage);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String expected1 \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"You have successfully purchased the following seats: \\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"[A1]\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"The total cost of the ticket is $30.00\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected1, ui.showCommandLine());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // sell a seat that is taken"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // SellSeatCommand testCommand2 \u003d new SellSeatCommand(\"Test Show 1\", \"5/5/2020\",\"A1\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand1.execute(model, ui, storage);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String expected2 \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"☹ OOPS!!! All of the seats [A1] are unavailable\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected2, ui.showCommandLine());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        //sell a seat that does not exist"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        SellSeatCommand testCommand2 \u003d new SellSeatCommand(\"Test Show 1|5/5/2020|%1\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand2.execute(model, ui, storage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String expected3 \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"☹ OOPS!!! All of the seats [%1] are unavailable\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected3, ui.showCommandLine());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @AfterAll"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    static void cleanUp() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        File deletedFile \u003d new File(filePath, \"optix.txt\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        deletedFile.delete();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 31,
      "CheeSengg": 28
    }
  },
  {
    "path": "src/test/java/Optix/commands/seats/ViewSeatsCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commands.seats;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.commands.shows.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import org.junit.jupiter.api.AfterAll;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "class ViewSeatsCommandTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static File currentDir \u003d new File(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static File filePath \u003d new File(currentDir.toString() + \"\\\\src\\\\test\\\\data\\\\testOptix\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Model model \u003d new Model(storage);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // add a dummy show"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        AddCommand addDummyShow \u003d new AddCommand(\"Dummy Show|20|5/5/2020\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        addDummyShow.execute(model, ui, storage);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        ViewSeatsCommand testCommand \u003d new ViewSeatsCommand(\"Dummy Show|5/5/2020\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand.execute(model, ui, storage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String expected1 \u003d"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                        + \"Here is the layout of the theatre for Dummy Show on 5/5/2020:\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                        + \"                |STAGE|           \\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                        + \"  [✘][✘][✘][✘][✘][✘][✘][✘][✘][✘]\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                        + \"  [✘][✘][✘][✘][✘][✘][✘][✘][✘][✘]\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                        + \"  [✘][✘][✘][✘][✘][✘][✘][✘][✘][✘]\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                        + \"  [✘][✘][✘][✘][✘][✘][✘][✘][✘][✘]\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                        + \"  [✘][✘][✘][✘][✘][✘][✘][✘][✘][✘]\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                        + \"  [✘][✘][✘][✘][✘][✘][✘][✘][✘][✘]\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                        + \"\\nTier 1 Seats: 20\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                        + \"Tier 2 Seats: 20\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                        + \"Tier 3 Seats: 20\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                        + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected1, ui.showCommandLine());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // view a show that does not exist"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        ViewSeatsCommand viewNonExistentShow \u003d new ViewSeatsCommand(\"non existent show|5/5/2020\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        viewNonExistentShow.execute(model, ui, storage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String expected2 \u003d"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                        + \"☹ OOPS!!! Sorry the show non existent show cannot be found.\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                        + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected2, ui.showCommandLine());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @AfterAll"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    static void cleanUp() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        File deletedFile \u003d new File(filePath, \"optix.txt\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        deletedFile.delete();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 37,
      "CheeSengg": 23
    }
  },
  {
    "path": "src/test/java/Optix/commands/shows/AddCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commands.shows;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import org.junit.jupiter.api.AfterAll;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "class AddCommandTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static File currentDir \u003d new File(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static File filePath \u003d new File(currentDir.toString() + \"\\\\src\\\\test\\\\data\\\\testOptix\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Model model \u003d new Model(storage);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        AddCommand testCommand \u003d new AddCommand(\"dummy show name|20|5/5/2020 | 6/10/2020\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand.execute(model, ui, storage);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String expected \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"Noted. The following shows has been added:\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"1. dummy show name (on: 5/5/2020)\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"2. dummy show name (on: 6/10/2020)\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected, ui.showCommandLine());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        AddCommand testCommand2 \u003d new AddCommand(\"dummy show name|20|7/10/2020|6/10/2020\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand2.execute(model, ui, storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String expected2 \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"Noted. The following shows has been added:\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"1. dummy show name (on: 7/10/2020)\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"☹ OOPS!!! Unable to add the following shows:\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"1. dummy show name (on: 6/10/2020)\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected2, ui.showCommandLine());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NicholasLiu97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        AddCommand testCommand3 \u003d new AddCommand(\"dummy show name|20|5/5/2020|6/10/2020\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand3.execute(model, ui, storage);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String expected3 \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"☹ OOPS!!! Unable to add the following shows:\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"1. dummy show name (on: 5/5/2020)\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"2. dummy show name (on: 6/10/2020)\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected3, ui.showCommandLine());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        filePath.deleteOnExit();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @AfterAll"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    static void cleanUp() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        File deletedFile \u003d new File(filePath, \"optix.txt\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        deletedFile.delete();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 21,
      "CheeSengg": 42,
      "NicholasLiu97": 2
    }
  },
  {
    "path": "src/test/java/Optix/commands/shows/DeleteCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commands.shows;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.DeleteCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import org.junit.jupiter.api.AfterAll;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "class DeleteCommandTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static File currentDir \u003d new File(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static File filePath \u003d new File(currentDir.toString() + \"\\\\src\\\\test\\\\data\\\\testOptix\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Model model \u003d new Model(storage);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        AddCommand addTestShow1 \u003d new AddCommand(\"Test Show 1|20|5/5/2020|6/5/2020\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        addTestShow1.execute(model, ui, storage);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        DeleteCommand testCommand1 \u003d new DeleteCommand(\"Test Show 1|5/5/2020|6/5/2020\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand1.execute(model, ui, storage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String expected1 \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"Noted. The following shows has been deleted:\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"1. Test Show 1 (on: 5/5/2020)\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"2. Test Show 1 (on: 6/5/2020)\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected1, ui.showCommandLine());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        DeleteCommand testCommand2 \u003d new DeleteCommand(\"Non-existent show|4/5/2020\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand2.execute(model, ui, storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String expected2 \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"☹ OOPS!!! Unable to find the following shows:\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"1. Non-existent show (on: 4/5/2020)\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected2, ui.showCommandLine());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        addTestShow1.execute(model, ui, storage);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        DeleteCommand testCommand3 \u003d new DeleteCommand(\"Test Show 1|6/5/2020|5/5/2020|2/5/2020\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand3.execute(model, ui, storage);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String expected3 \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"Noted. The following shows has been deleted:\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"1. Test Show 1 (on: 6/5/2020)\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"2. Test Show 1 (on: 5/5/2020)\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"☹ OOPS!!! Unable to find the following shows:\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"1. Test Show 1 (on: 2/5/2020)\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected3, ui.showCommandLine());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        filePath.deleteOnExit();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @AfterAll"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    static void cleanUp() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        File deletedFile \u003d new File(filePath, \"optix.txt\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        deletedFile.delete();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 22,
      "CheeSengg": 41
    }
  },
  {
    "path": "src/test/java/Optix/commands/shows/EditCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commands.shows;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.EditCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import org.junit.jupiter.api.AfterAll;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "class EditCommandTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static File currentDir \u003d new File(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static File filePath \u003d new File(currentDir.toString() + \"\\\\src\\\\test\\\\data\\\\testOptix\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Model model \u003d new Model(storage);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        // add test shows"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        AddCommand addTestShow1 \u003d new AddCommand(\"Test Show 1|20|5/5/2020\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        addTestShow1.execute(model, ui, storage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        AddCommand addTestShow2 \u003d new AddCommand(\"Test Show 2|20|7/5/2020\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        addTestShow2.execute(model, ui, storage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        EditCommand testCommand \u003d new EditCommand(\"Test Show 1|5/5/2020|Test Show 3\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand.execute(model, ui, storage);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String expected1 \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"Show has been successfully updated to Test Show 3.\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected1, ui.showCommandLine());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        // postpone show 1 to an invalid date (there is a show on the desired date.)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        EditCommand testCommand2 \u003d new EditCommand(\"Test Show 1|5/5/2020|Test Show 3\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand2.execute(model, ui, storage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String expected2 \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"☹ OOPS!!! The show you are finding does not exist!\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected2, ui.showCommandLine());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        filePath.deleteOnExit();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @AfterAll"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    static void cleanUp() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        File deletedFile \u003d new File(filePath, \"optix.txt\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        deletedFile.delete();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 4,
      "CheeSengg": 46
    }
  },
  {
    "path": "src/test/java/Optix/commands/shows/ListCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commands.shows;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.ListCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import org.junit.jupiter.api.AfterAll;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "class ListCommandTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static File currentDir \u003d new File(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static File filePath \u003d new File(currentDir.toString() + \"\\\\src\\\\test\\\\data\\\\testOptix\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Model model \u003d new Model(storage);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // testing for an empty show list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        ListCommand testCommand1 \u003d new ListCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand1.execute(model, ui, storage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String expected1 \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"☹ OOPS!!! There are no shows in the near future.\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected1, ui.showCommandLine());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // testing for a filled show list"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        AddCommand addShow1 \u003d new AddCommand(\"dummy test 1|20|5/5/2020\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        addShow1.execute(model, ui, storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        AddCommand addShow2 \u003d new AddCommand(\"dummy test 2|20|6/5/2020\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        addShow2.execute(model, ui, storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        ListCommand testCommand2 \u003d new ListCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand2.execute(model, ui, storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String expected2 \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"Here are the list of shows:\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"1. dummy test 1 (on: 05/05/2020)\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"2. dummy test 2 (on: 06/05/2020)\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected2, ui.showCommandLine());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        filePath.deleteOnExit();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @AfterAll"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    static void cleanUp() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        File deletedFile \u003d new File(filePath, \"optix.txt\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        deletedFile.delete();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 27,
      "CheeSengg": 26
    }
  },
  {
    "path": "src/test/java/Optix/commands/shows/ListDateCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commands.shows;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.ListDateCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import org.junit.jupiter.api.AfterAll;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "class ListDateCommandTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static File currentDir \u003d new File(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static File filePath \u003d new File(currentDir.toString() + \"\\\\src\\\\test\\\\data\\\\testOptix\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Model model \u003d new Model(storage);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        // try looking for a show that does not exist"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ListDateCommand testCommand1 \u003d new ListDateCommand(\"december 2020\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand1.execute(model, ui, storage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String expected1 \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"☹ OOPS!!! There are no shows on december 2020.\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected1, ui.showCommandLine());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        // insert dummy show"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        AddCommand insertDummyShow1 \u003d new AddCommand(\"Dummy Show|20|5/5/2020\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        insertDummyShow1.execute(model, ui, storage);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        AddCommand insertDummyShow2 \u003d new AddCommand(\"Dummy Show|20|6/5/2020\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        insertDummyShow2.execute(model, ui, storage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        // attempt to view dummy show."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        ListDateCommand testCommand2 \u003d new ListDateCommand(\"May 2020\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand2.execute(model, ui, storage);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        String expected2 \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"These shows are showing on May 2020: \\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"1. Dummy Show (on: 05/05/2020)\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"2. Dummy Show (on: 06/05/2020)\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected2, ui.showCommandLine());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        filePath.deleteOnExit();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @AfterAll"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    static void cleanUp() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        File deletedFile \u003d new File(filePath, \"optix.txt\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        deletedFile.delete();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 2,
      "CheeSengg": 53
    }
  },
  {
    "path": "src/test/java/Optix/commands/shows/ListShowCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commands.shows;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import org.junit.jupiter.api.AfterAll;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "class ListShowCommandTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static File currentDir \u003d new File(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static File filePath \u003d new File(currentDir.toString() + \"\\\\src\\\\test\\\\data\\\\testOptix\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Model model \u003d new Model(storage);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // try looking for a show that does not exist"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        ListShowCommand testCommand1 \u003d new ListShowCommand(\"non existent show.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand1.execute(model, ui, storage);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String expected1 \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"☹ OOPS!!! The show cannot be found.\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected1, ui.showCommandLine());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // insert dummy show"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        AddCommand insertDummyShow1 \u003d new AddCommand(\"Dummy Show|20|5/5/2020\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        insertDummyShow1.execute(model, ui, storage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        AddCommand insertDummyShow2 \u003d new AddCommand(\"Dummy Show|20|6/5/2020\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        insertDummyShow2.execute(model, ui, storage);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // attempt to view dummy show."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        ListShowCommand testCommand2 \u003d new ListShowCommand(\"Dummy Show\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand2.execute(model, ui, storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String expected2 \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"The show Dummy Show is showing on the following following dates: \\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"1. 05/05/2020\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "                + \"2. 06/05/2020\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected2, ui.showCommandLine());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        filePath.deleteOnExit();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @AfterAll"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    static void cleanUp() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        File deletedFile \u003d new File(filePath, \"optix.txt\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        deletedFile.delete();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 29,
      "CheeSengg": 24
    }
  },
  {
    "path": "src/test/java/Optix/commands/shows/PostponeCommandTest.java",
    "fileType": "tests",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "package optix.commands.shows;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import optix.commands.shows.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commands.shows.PostponeCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Model;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.commons.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import optix.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import org.junit.jupiter.api.AfterAll;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "class PostponeCommandTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static File currentDir \u003d new File(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private static File filePath \u003d new File(currentDir.toString() + \"\\\\src\\\\test\\\\data\\\\testOptix\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    private Model model \u003d new Model(storage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    void execute() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // add test shows"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        AddCommand addTestShow1 \u003d new AddCommand(\"Test Show 1|20|5/5/2020\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        addTestShow1.execute(model, ui, storage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        AddCommand addTestShow2 \u003d new AddCommand(\"Test Show 2|20|7/5/2020\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        addTestShow2.execute(model, ui, storage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // postpone show 1 to a valid date (there is no show on desired date.)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        PostponeCommand testCommand \u003d new PostponeCommand(\"Test Show 1|5/5/2020|6/5/2020\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand.execute(model, ui, storage);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String expected1 \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"Test Show 1 has been postponed from 5/5/2020 to 6/5/2020.\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected1, ui.showCommandLine());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // postpone show 1 to an invalid date (there is a show on the desired date.)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        PostponeCommand testCommand2 \u003d new PostponeCommand(\"Test Show 1|6/5/2020|7/5/2020\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        testCommand2.execute(model, ui, storage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String expected2 \u003d \"__________________________________________________________________________________\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"☹ OOPS!!! There already exists a show for 7/5/2020.\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                + \"__________________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        assertEquals(expected2, ui.showCommandLine());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        filePath.deleteOnExit();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    @AfterAll"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    static void cleanUp() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        File deletedFile \u003d new File(filePath, \"optix.txt\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "        deletedFile.delete();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CheeSengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 29,
      "CheeSengg": 23
    }
  }
]
